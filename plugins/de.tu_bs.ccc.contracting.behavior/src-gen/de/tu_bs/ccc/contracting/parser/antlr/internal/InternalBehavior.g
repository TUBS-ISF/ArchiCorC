/*
 * generated by Xtext 2.20.0
 */
grammar InternalBehavior;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.tu_bs.ccc.contracting.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.tu_bs.ccc.contracting.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.tu_bs.ccc.contracting.services.BehaviorGrammarAccess;

}

@parser::members {

 	private BehaviorGrammarAccess grammarAccess;

    public InternalBehaviorParser(TokenStream input, BehaviorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BehaviorModel";
   	}

   	@Override
   	protected BehaviorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBehaviorModel
entryRuleBehaviorModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorModelRule()); }
	iv_ruleBehaviorModel=ruleBehaviorModel
	{ $current=$iv_ruleBehaviorModel.current; }
	EOF;

// Rule BehaviorModel
ruleBehaviorModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBehaviorModelAccess().getBehaviorModelAction_0(),
					$current);
			}
		)
		otherlv_1='package'
		{
			newLeafNode(otherlv_1, grammarAccess.getBehaviorModelAccess().getPackageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorModelAccess().getNameFQNParserRuleCall_2_0());
				}
				lv_name_2_0=ruleFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorModelRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.tu_bs.ccc.contracting.Behavior.FQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorModelAccess().getImportsImportParserRuleCall_3_0());
				}
				lv_imports_3_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_3_0,
						"de.tu_bs.ccc.contracting.Behavior.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorModelAccess().getBehaviorsBehaviorParserRuleCall_4_0());
				}
				lv_behaviors_4_0=ruleBehavior
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorModelRule());
					}
					add(
						$current,
						"behaviors",
						lv_behaviors_4_0,
						"de.tu_bs.ccc.contracting.Behavior.Behavior");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	iv_ruleBehavior=ruleBehavior
	{ $current=$iv_ruleBehavior.current; }
	EOF;

// Rule Behavior
ruleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBehaviorAccess().getBehaviorAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='Behavior'
		{
			newLeafNode(otherlv_2, grammarAccess.getBehaviorAccess().getBehaviorKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBehaviorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_4='implements'
			{
				newLeafNode(otherlv_4, grammarAccess.getBehaviorAccess().getImplementsKeyword_4_0());
			}
			(
				(
					lv_componentName_5_0=RULE_ID
					{
						newLeafNode(lv_componentName_5_0, grammarAccess.getBehaviorAccess().getComponentNameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBehaviorRule());
						}
						setWithLastConsumed(
							$current,
							"componentName",
							lv_componentName_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getBehaviorAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_7='vars'
			{
				newLeafNode(otherlv_7, grammarAccess.getBehaviorAccess().getVarsKeyword_6_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getBehaviorAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBehaviorAccess().getVariablesFDeclarationParserRuleCall_6_2_0_0());
						}
						lv_variables_9_0=ruleFDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBehaviorRule());
							}
							add(
								$current,
								"variables",
								lv_variables_9_0,
								"de.tu_bs.ccc.contracting.Behavior.FDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=';'
					{
						newLeafNode(otherlv_10, grammarAccess.getBehaviorAccess().getSemicolonKeyword_6_2_1());
					}
				)?
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getBehaviorAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		(
			otherlv_12='events'
			{
				newLeafNode(otherlv_12, grammarAccess.getBehaviorAccess().getEventsKeyword_7_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getBehaviorAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBehaviorAccess().getEventsEventBindingParserRuleCall_7_2_0_0());
						}
						lv_events_14_0=ruleEventBinding
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBehaviorRule());
							}
							add(
								$current,
								"events",
								lv_events_14_0,
								"de.tu_bs.ccc.contracting.Behavior.EventBinding");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_15=';'
					{
						newLeafNode(otherlv_15, grammarAccess.getBehaviorAccess().getSemicolonKeyword_7_2_1());
					}
				)?
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getBehaviorAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
		(
			otherlv_17='signals'
			{
				newLeafNode(otherlv_17, grammarAccess.getBehaviorAccess().getSignalsKeyword_8_0());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getBehaviorAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBehaviorAccess().getSignalsSignalParserRuleCall_8_2_0_0());
						}
						lv_signals_19_0=ruleSignal
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBehaviorRule());
							}
							add(
								$current,
								"signals",
								lv_signals_19_0,
								"de.tu_bs.ccc.contracting.Behavior.Signal");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_20=';'
					{
						newLeafNode(otherlv_20, grammarAccess.getBehaviorAccess().getSemicolonKeyword_8_2_1());
					}
				)?
			)*
			otherlv_21='}'
			{
				newLeafNode(otherlv_21, grammarAccess.getBehaviorAccess().getRightCurlyBracketKeyword_8_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorAccess().getOperationsStandardOperationParserRuleCall_9_0());
				}
				lv_operations_22_0=ruleStandardOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorRule());
					}
					add(
						$current,
						"operations",
						lv_operations_22_0,
						"de.tu_bs.ccc.contracting.Behavior.StandardOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_23='FSM'
		{
			newLeafNode(otherlv_23, grammarAccess.getBehaviorAccess().getFSMKeyword_10());
		}
		(
			(
				lv_name_24_0=RULE_ID
				{
					newLeafNode(lv_name_24_0, grammarAccess.getBehaviorAccess().getNameIDTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBehaviorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_24_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBehaviorAccess().getStateGraphsFStateGraphParserRuleCall_12_0());
				}
				lv_stateGraphs_25_0=ruleFStateGraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBehaviorRule());
					}
					add(
						$current,
						"stateGraphs",
						lv_stateGraphs_25_0,
						"de.tu_bs.ccc.contracting.Behavior.FStateGraph");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_26='}'
		{
			newLeafNode(otherlv_26, grammarAccess.getBehaviorAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleSignal
entryRuleSignal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignalRule()); }
	iv_ruleSignal=ruleSignal
	{ $current=$iv_ruleSignal.current; }
	EOF;

// Rule Signal
ruleSignal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSignalAccess().getSignalAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSignalAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignalRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSignalAccess().getSignalSignalSignatureParserRuleCall_2_0());
				}
				lv_signal_2_0=ruleSignalSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignalRule());
					}
					set(
						$current,
						"signal",
						lv_signal_2_0,
						"de.tu_bs.ccc.contracting.Behavior.SignalSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSignalSignature
entryRuleSignalSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignalSignatureRule()); }
	iv_ruleSignalSignature=ruleSignalSignature
	{ $current=$iv_ruleSignalSignature.current; }
	EOF;

// Rule SignalSignature
ruleSignalSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSignalSignatureAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSignalSignatureRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getSignalSignatureAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSignalSignatureAccess().getArgumentsVarDeclParserRuleCall_1_1_0_0());
						}
						lv_arguments_2_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSignalSignatureRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_2_0,
								"de.tu_bs.ccc.contracting.Behavior.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getSignalSignatureAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSignalSignatureAccess().getArgumentsVarDeclParserRuleCall_1_1_1_1_0());
							}
							lv_arguments_4_0=ruleVarDecl
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSignalSignatureRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_4_0,
									"de.tu_bs.ccc.contracting.Behavior.VarDecl");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getSignalSignatureAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleEventBinding
entryRuleEventBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventBindingRule()); }
	iv_ruleEventBinding=ruleEventBinding
	{ $current=$iv_ruleEventBinding.current; }
	EOF;

// Rule EventBinding
ruleEventBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventBindingAccess().getEventBindingAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventBindingAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventBindingRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getEventBindingAccess().getOnKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventBindingAccess().getTriggerEventTriggerParserRuleCall_3_0());
				}
				lv_trigger_3_0=ruleEventTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventBindingRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_3_0,
						"de.tu_bs.ccc.contracting.Behavior.EventTrigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='->'
		{
			newLeafNode(otherlv_4, grammarAccess.getEventBindingAccess().getHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventBindingAccess().getToEventParserRuleCall_5_0());
				}
				lv_to_5_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventBindingRule());
					}
					set(
						$current,
						"to",
						lv_to_5_0,
						"de.tu_bs.ccc.contracting.Behavior.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEventTrigger
entryRuleEventTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventTriggerRule()); }
	iv_ruleEventTrigger=ruleEventTrigger
	{ $current=$iv_ruleEventTrigger.current; }
	EOF;

// Rule EventTrigger
ruleEventTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getEventTriggerAccess().getEventEventOnIfParserRuleCall_0());
			}
			lv_event_0_0=ruleEventOnIf
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getEventTriggerRule());
				}
				set(
					$current,
					"event",
					lv_event_0_0,
					"de.tu_bs.ccc.contracting.Behavior.EventOnIf");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEventOnIf
entryRuleEventOnIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventOnIfRule()); }
	iv_ruleEventOnIf=ruleEventOnIf
	{ $current=$iv_ruleEventOnIf.current; }
	EOF;

// Rule EventOnIf
ruleEventOnIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='time'
			{
				newLeafNode(otherlv_0, grammarAccess.getEventOnIfAccess().getTimeKeyword_0_0());
			}
			(
				(
					lv_freq_1_0=RULE_INT
					{
						newLeafNode(lv_freq_1_0, grammarAccess.getEventOnIfAccess().getFreqINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventOnIfRule());
						}
						setWithLastConsumed(
							$current,
							"freq",
							lv_freq_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			otherlv_2='condition'
			{
				newLeafNode(otherlv_2, grammarAccess.getEventOnIfAccess().getConditionKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventOnIfAccess().getConditionLogicalOrExpressionParserRuleCall_1_1_0());
					}
					lv_condition_3_0=ruleLogicalOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventOnIfRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"de.tu_bs.ccc.contracting.Behavior.LogicalOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4='call'
			{
				newLeafNode(otherlv_4, grammarAccess.getEventOnIfAccess().getCallKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventOnIfAccess().getCallMethodSignatureParserRuleCall_2_1_0());
					}
					lv_call_5_0=ruleMethodSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventOnIfRule());
						}
						set(
							$current,
							"call",
							lv_call_5_0,
							"de.tu_bs.ccc.contracting.Behavior.MethodSignature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_6='event'
			{
				newLeafNode(otherlv_6, grammarAccess.getEventOnIfAccess().getEventKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventOnIfAccess().getEventFQNParserRuleCall_3_1_0());
					}
					lv_event_7_0=ruleFQN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventOnIfRule());
						}
						set(
							$current,
							"event",
							lv_event_7_0,
							"de.tu_bs.ccc.contracting.Behavior.FQN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_8='signal'
			{
				newLeafNode(otherlv_8, grammarAccess.getEventOnIfAccess().getSignalKeyword_4_0());
			}
			(
				(
					lv_signal_9_0=RULE_ID
					{
						newLeafNode(lv_signal_9_0, grammarAccess.getEventOnIfAccess().getSignalIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventOnIfRule());
						}
						setWithLastConsumed(
							$current,
							"signal",
							lv_signal_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleMethodSignature
entryRuleMethodSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodSignatureRule()); }
	iv_ruleMethodSignature=ruleMethodSignature
	{ $current=$iv_ruleMethodSignature.current; }
	EOF;

// Rule MethodSignature
ruleMethodSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodSignatureAccess().getNameFQNParserRuleCall_0_0());
				}
				lv_name_0_0=ruleFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodSignatureRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"de.tu_bs.ccc.contracting.Behavior.FQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodSignatureAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodSignatureAccess().getArgumentsVarDeclParserRuleCall_2_0_0());
					}
					lv_arguments_2_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodSignatureRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"de.tu_bs.ccc.contracting.Behavior.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMethodSignatureAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodSignatureAccess().getArgumentsVarDeclParserRuleCall_2_1_1_0());
						}
						lv_arguments_4_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodSignatureRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"de.tu_bs.ccc.contracting.Behavior.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMethodSignatureAccess().getRightParenthesisKeyword_3());
		}
		(
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getMethodSignatureAccess().getColonKeyword_4_0());
			}
			(
				otherlv_7='void'
				{
					newLeafNode(otherlv_7, grammarAccess.getMethodSignatureAccess().getVoidKeyword_4_1_0());
				}
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodSignatureAccess().getReturnTypeRefableTypeParserRuleCall_4_1_1_0());
						}
						lv_returnType_8_0=ruleRefableType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodSignatureRule());
							}
							set(
								$current,
								"returnType",
								lv_returnType_8_0,
								"de.tu_bs.ccc.contracting.Behavior.RefableType");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEventAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_arguments_2_0=RULE_ID
					{
						newLeafNode(lv_arguments_2_0, grammarAccess.getEventAccess().getArgumentsIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventRule());
						}
						addWithLastConsumed(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getEventAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						lv_arguments_4_0=RULE_ID
						{
							newLeafNode(lv_arguments_4_0, grammarAccess.getEventAccess().getArgumentsIDTerminalRuleCall_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEventRule());
							}
							addWithLastConsumed(
								$current,
								"arguments",
								lv_arguments_4_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getEventAccess().getRightParenthesisKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleStandardOperation
entryRuleStandardOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandardOperationRule()); }
	iv_ruleStandardOperation=ruleStandardOperation
	{ $current=$iv_ruleStandardOperation.current; }
	EOF;

// Rule StandardOperation
ruleStandardOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStandardOperationAccess().getCommentAnnotationBlockParserRuleCall_0_0());
				}
				lv_comment_0_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandardOperationRule());
					}
					set(
						$current,
						"comment",
						lv_comment_0_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_override_1_0='override'
				{
					newLeafNode(lv_override_1_0, grammarAccess.getStandardOperationAccess().getOverrideOverrideKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStandardOperationRule());
					}
					setWithLastConsumed($current, "override", true, "override");
				}
			)
		)?
		otherlv_2='Operation'
		{
			newLeafNode(otherlv_2, grammarAccess.getStandardOperationAccess().getOperationKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getStandardOperationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStandardOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getStandardOperationAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStandardOperationAccess().getArgumentsVarDeclParserRuleCall_5_0_0());
					}
					lv_arguments_5_0=ruleVarDecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStandardOperationRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_5_0,
							"de.tu_bs.ccc.contracting.Behavior.VarDecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getStandardOperationAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStandardOperationAccess().getArgumentsVarDeclParserRuleCall_5_1_1_0());
						}
						lv_arguments_7_0=ruleVarDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStandardOperationRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_7_0,
								"de.tu_bs.ccc.contracting.Behavior.VarDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getStandardOperationAccess().getRightParenthesisKeyword_6());
		}
		(
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getStandardOperationAccess().getColonKeyword_7_0());
			}
			(
				otherlv_10='void'
				{
					newLeafNode(otherlv_10, grammarAccess.getStandardOperationAccess().getVoidKeyword_7_1_0());
				}
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getStandardOperationAccess().getReturnTypeFTypeRefParserRuleCall_7_1_1_0_0());
							}
							lv_returnType_11_0=ruleFTypeRef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getStandardOperationRule());
								}
								set(
									$current,
									"returnType",
									lv_returnType_11_0,
									"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							(
								lv_array_12_0='['
								{
									newLeafNode(lv_array_12_0, grammarAccess.getStandardOperationAccess().getArrayLeftSquareBracketKeyword_7_1_1_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getStandardOperationRule());
									}
									setWithLastConsumed($current, "array", true, "[");
								}
							)
						)
						otherlv_13=']'
						{
							newLeafNode(otherlv_13, grammarAccess.getStandardOperationAccess().getRightSquareBracketKeyword_7_1_1_1_1());
						}
					)?
				)
			)
		)?
		otherlv_14='{'
		{
			newLeafNode(otherlv_14, grammarAccess.getStandardOperationAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStandardOperationAccess().getContractSpecificationBlockParserRuleCall_9_0());
				}
				lv_contract_15_0=ruleSpecificationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandardOperationRule());
					}
					set(
						$current,
						"contract",
						lv_contract_15_0,
						"de.tu_bs.ccc.contracting.Behavior.SpecificationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStandardOperationAccess().getDetailCodeDetailCodeParserRuleCall_10_0());
				}
				lv_detailCode_16_0=ruleDetailCode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStandardOperationRule());
					}
					set(
						$current,
						"detailCode",
						lv_detailCode_16_0,
						"de.tu_bs.ccc.contracting.Behavior.DetailCode");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getStandardOperationAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	iv_ruleVarDecl=ruleVarDecl
	{ $current=$iv_ruleVarDecl.current; }
	EOF;

// Rule VarDecl
ruleVarDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVarDeclAccess().getRefTypeFTypeRefParserRuleCall_2_0());
				}
				lv_refType_2_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarDeclRule());
					}
					set(
						$current,
						"refType",
						lv_refType_2_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_array_3_0='['
					{
						newLeafNode(lv_array_3_0, grammarAccess.getVarDeclAccess().getArrayLeftSquareBracketKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarDeclRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_3_1());
			}
		)?
		(
			(
				lv_varargs_5_0='varargs'
				{
					newLeafNode(lv_varargs_5_0, grammarAccess.getVarDeclAccess().getVarargsVarargsKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarDeclRule());
					}
					setWithLastConsumed($current, "varargs", true, "varargs");
				}
			)
		)?
	)
;

// Entry rule entryRuleRefableType
entryRuleRefableType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefableTypeRule()); }
	iv_ruleRefableType=ruleRefableType
	{ $current=$iv_ruleRefableType.current; }
	EOF;

// Rule RefableType
ruleRefableType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefableTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRefableTypeAccess().getTypeFTypeRefCrossReference_0_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_ref_1_0='ref'
				{
					newLeafNode(lv_ref_1_0, grammarAccess.getRefableTypeAccess().getRefRefKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefableTypeRule());
					}
					setWithLastConsumed($current, "ref", true, "ref");
				}
			)
		)?
	)
;

// Entry rule entryRuleSpecificationBlock
entryRuleSpecificationBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationBlockRule()); }
	iv_ruleSpecificationBlock=ruleSpecificationBlock
	{ $current=$iv_ruleSpecificationBlock.current; }
	EOF;

// Rule SpecificationBlock
ruleSpecificationBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpecificationBlockAccess().getSpecificationBlockAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationBlockAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationBlockRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='contract'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpecificationBlockAccess().getContractKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSpecificationBlockAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationBlockAccess().getContractsContractPairParserRuleCall_4_0());
				}
				lv_contracts_4_0=ruleContractPair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationBlockRule());
					}
					add(
						$current,
						"contracts",
						lv_contracts_4_0,
						"de.tu_bs.ccc.contracting.Behavior.ContractPair");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='also'
			{
				newLeafNode(otherlv_5, grammarAccess.getSpecificationBlockAccess().getAlsoKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpecificationBlockAccess().getContractsContractPairParserRuleCall_5_1_0());
					}
					lv_contracts_6_0=ruleContractPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpecificationBlockRule());
						}
						add(
							$current,
							"contracts",
							lv_contracts_6_0,
							"de.tu_bs.ccc.contracting.Behavior.ContractPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSpecificationBlockAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleContractPair
entryRuleContractPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContractPairRule()); }
	iv_ruleContractPair=ruleContractPair
	{ $current=$iv_ruleContractPair.current; }
	EOF;

// Rule ContractPair
ruleContractPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContractPairAccess().getContractPairAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContractPairAccess().getReqRequiresParserRuleCall_1_0());
				}
				lv_req_1_0=ruleRequires
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractPairRule());
					}
					add(
						$current,
						"req",
						lv_req_1_0,
						"de.tu_bs.ccc.contracting.Behavior.Requires");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getContractPairAccess().getEnsEnsuresParserRuleCall_2_0());
				}
				lv_ens_2_0=ruleEnsures
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContractPairRule());
					}
					add(
						$current,
						"ens",
						lv_ens_2_0,
						"de.tu_bs.ccc.contracting.Behavior.Ensures");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRequires
entryRuleRequires returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequiresRule()); }
	iv_ruleRequires=ruleRequires
	{ $current=$iv_ruleRequires.current; }
	EOF;

// Rule Requires
ruleRequires returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='requires'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequiresAccess().getRequiresKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRequiresAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequiresAccess().getExprContractExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleContractExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequiresRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"de.tu_bs.ccc.contracting.Behavior.ContractExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getRequiresAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleEnsures
entryRuleEnsures returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnsuresRule()); }
	iv_ruleEnsures=ruleEnsures
	{ $current=$iv_ruleEnsures.current; }
	EOF;

// Rule Ensures
ruleEnsures returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ensures'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnsuresAccess().getEnsuresKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnsuresAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnsuresAccess().getExprContractExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleContractExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnsuresRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"de.tu_bs.ccc.contracting.Behavior.ContractExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnsuresAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleContractExpression
entryRuleContractExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContractExpressionRule()); }
	iv_ruleContractExpression=ruleContractExpression
	{ $current=$iv_ruleContractExpression.current.getText(); }
	EOF;

// Rule ContractExpression
ruleContractExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getContractExpressionAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleFStateGraph
entryRuleFStateGraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFStateGraphRule()); }
	iv_ruleFStateGraph=ruleFStateGraph
	{ $current=$iv_ruleFStateGraph.current; }
	EOF;

// Rule FStateGraph
ruleFStateGraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFStateGraphAccess().getFStateGraphAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFStateGraphAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='initial'
		{
			newLeafNode(otherlv_2, grammarAccess.getFStateGraphAccess().getInitialKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFStateGraphRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getFStateGraphAccess().getInitialFStateCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFStateGraphAccess().getStatesFStateParserRuleCall_4_0());
				}
				lv_states_4_0=ruleFState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFStateGraphRule());
					}
					add(
						$current,
						"states",
						lv_states_4_0,
						"de.tu_bs.ccc.contracting.Behavior.FState");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFStateGraphAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFState
entryRuleFState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFStateRule()); }
	iv_ruleFState=ruleFState
	{ $current=$iv_ruleFState.current; }
	EOF;

// Rule FState
ruleFState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFStateAccess().getFStateAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFStateAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFStateRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='state'
		{
			newLeafNode(otherlv_2, grammarAccess.getFStateAccess().getStateKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFStateAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getFStateAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='entry'
			{
				newLeafNode(otherlv_5, grammarAccess.getFStateAccess().getEntryKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getFStateAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					lv_entryAction_7_0=RULE_CC_STRING
					{
						newLeafNode(lv_entryAction_7_0, grammarAccess.getFStateAccess().getEntryActionCC_STRINGTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFStateRule());
						}
						setWithLastConsumed(
							$current,
							"entryAction",
							lv_entryAction_7_0,
							"de.tu_bs.ccc.contracting.Behavior.CC_STRING");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFStateAccess().getBroadcastEntryBroadcastParserRuleCall_5_3_0());
					}
					lv_broadcastEntry_8_0=ruleBroadcast
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFStateRule());
						}
						set(
							$current,
							"broadcastEntry",
							lv_broadcastEntry_8_0,
							"de.tu_bs.ccc.contracting.Behavior.Broadcast");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getFStateAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_10='exit'
			{
				newLeafNode(otherlv_10, grammarAccess.getFStateAccess().getExitKeyword_6_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getFStateAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					lv_exitAction_12_0=RULE_CC_STRING
					{
						newLeafNode(lv_exitAction_12_0, grammarAccess.getFStateAccess().getExitActionCC_STRINGTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFStateRule());
						}
						setWithLastConsumed(
							$current,
							"exitAction",
							lv_exitAction_12_0,
							"de.tu_bs.ccc.contracting.Behavior.CC_STRING");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFStateAccess().getBroadcastExitBroadcastParserRuleCall_6_3_0());
					}
					lv_broadcastExit_13_0=ruleBroadcast
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFStateRule());
						}
						set(
							$current,
							"broadcastExit",
							lv_broadcastExit_13_0,
							"de.tu_bs.ccc.contracting.Behavior.Broadcast");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getFStateAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_15='do'
			{
				newLeafNode(otherlv_15, grammarAccess.getFStateAccess().getDoKeyword_7_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getFStateAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					lv_doAction_17_0=RULE_CC_STRING
					{
						newLeafNode(lv_doAction_17_0, grammarAccess.getFStateAccess().getDoActionCC_STRINGTerminalRuleCall_7_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFStateRule());
						}
						setWithLastConsumed(
							$current,
							"doAction",
							lv_doAction_17_0,
							"de.tu_bs.ccc.contracting.Behavior.CC_STRING");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFStateAccess().getBoradcastDoBroadcastParserRuleCall_7_3_0());
					}
					lv_boradcastDo_18_0=ruleBroadcast
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFStateRule());
						}
						set(
							$current,
							"boradcastDo",
							lv_boradcastDo_18_0,
							"de.tu_bs.ccc.contracting.Behavior.Broadcast");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getFStateAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFStateAccess().getTransitionsFTransitionParserRuleCall_8_0());
				}
				lv_transitions_20_0=ruleFTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFStateRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_20_0,
						"de.tu_bs.ccc.contracting.Behavior.FTransition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getFStateAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleFTransition
entryRuleFTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFTransitionRule()); }
	iv_ruleFTransition=ruleFTransition
	{ $current=$iv_ruleFTransition.current; }
	EOF;

// Rule FTransition
ruleFTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getFTransitionAccess().getOnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFTransitionAccess().getTriggerFTriggerParserRuleCall_1_0());
				}
				lv_trigger_1_0=ruleFTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFTransitionRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_1_0,
						"de.tu_bs.ccc.contracting.Behavior.FTrigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFTransitionAccess().getGuardFGuardParserRuleCall_2_0());
				}
				lv_guard_2_0=ruleFGuard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFTransitionRule());
					}
					set(
						$current,
						"guard",
						lv_guard_2_0,
						"de.tu_bs.ccc.contracting.Behavior.FGuard");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='->'
		{
			newLeafNode(otherlv_3, grammarAccess.getFTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFTransitionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getFTransitionAccess().getToFStateCrossReference_4_0());
				}
			)
		)
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getFTransitionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					lv_action_6_0=RULE_CC_STRING
					{
						newLeafNode(lv_action_6_0, grammarAccess.getFTransitionAccess().getActionCC_STRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFTransitionRule());
						}
						setWithLastConsumed(
							$current,
							"action",
							lv_action_6_0,
							"de.tu_bs.ccc.contracting.Behavior.CC_STRING");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFTransitionAccess().getBroadcastBroadcastParserRuleCall_5_2_0());
					}
					lv_broadcast_7_0=ruleBroadcast
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFTransitionRule());
						}
						set(
							$current,
							"broadcast",
							lv_broadcast_7_0,
							"de.tu_bs.ccc.contracting.Behavior.Broadcast");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getFTransitionAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleFTrigger
entryRuleFTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFTriggerRule()); }
	iv_ruleFTrigger=ruleFTrigger
	{ $current=$iv_ruleFTrigger.current; }
	EOF;

// Rule FTrigger
ruleFTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFTriggerAccess().getEventFEventOnIfParserRuleCall_0());
			}
			lv_event_0_0=ruleFEventOnIf
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFTriggerRule());
				}
				set(
					$current,
					"event",
					lv_event_0_0,
					"de.tu_bs.ccc.contracting.Behavior.FEventOnIf");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFEventOnIf
entryRuleFEventOnIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFEventOnIfRule()); }
	iv_ruleFEventOnIf=ruleFEventOnIf
	{ $current=$iv_ruleFEventOnIf.current; }
	EOF;

// Rule FEventOnIf
ruleFEventOnIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getFEventOnIfAccess().getFEventOnIfAction_0_0(),
						$current);
				}
			)
			otherlv_1='tick'
			{
				newLeafNode(otherlv_1, grammarAccess.getFEventOnIfAccess().getTickKeyword_0_1());
			}
		)
		    |
		(
			otherlv_2='event'
			{
				newLeafNode(otherlv_2, grammarAccess.getFEventOnIfAccess().getEventKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFEventOnIfAccess().getNameEventParserRuleCall_1_1_0());
					}
					lv_name_3_0=ruleEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFEventOnIfRule());
						}
						set(
							$current,
							"name",
							lv_name_3_0,
							"de.tu_bs.ccc.contracting.Behavior.Event");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBroadcast
entryRuleBroadcast returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBroadcastRule()); }
	iv_ruleBroadcast=ruleBroadcast
	{ $current=$iv_ruleBroadcast.current; }
	EOF;

// Rule Broadcast
ruleBroadcast returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='emit'
		{
			newLeafNode(otherlv_0, grammarAccess.getBroadcastAccess().getEmitKeyword_0());
		}
		(
			(
				lv_signal_1_0=RULE_ID
				{
					newLeafNode(lv_signal_1_0, grammarAccess.getBroadcastAccess().getSignalIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBroadcastRule());
					}
					setWithLastConsumed(
						$current,
						"signal",
						lv_signal_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getBroadcastAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					lv_arguments_3_0=RULE_ID
					{
						newLeafNode(lv_arguments_3_0, grammarAccess.getBroadcastAccess().getArgumentsIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBroadcastRule());
						}
						addWithLastConsumed(
							$current,
							"arguments",
							lv_arguments_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getBroadcastAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						lv_arguments_5_0=RULE_ID
						{
							newLeafNode(lv_arguments_5_0, grammarAccess.getBroadcastAccess().getArgumentsIDTerminalRuleCall_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBroadcastRule());
							}
							addWithLastConsumed(
								$current,
								"arguments",
								lv_arguments_5_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getBroadcastAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleFGuard
entryRuleFGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFGuardRule()); }
	iv_ruleFGuard=ruleFGuard
	{ $current=$iv_ruleFGuard.current; }
	EOF;

// Rule FGuard
ruleFGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getFGuardAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFGuardAccess().getConditionLogicalOrExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleLogicalOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFGuardRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"de.tu_bs.ccc.contracting.Behavior.LogicalOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getFGuardAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleFTypeRef
entryRuleFTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFTypeRefRule()); }
	iv_ruleFTypeRef=ruleFTypeRef
	{ $current=$iv_ruleFTypeRef.current; }
	EOF;

// Rule FTypeRef
ruleFTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFTypeRefAccess().getPredefinedFBasicTypeIdEnumRuleCall_0_0());
				}
				lv_predefined_0_0=ruleFBasicTypeId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFTypeRefRule());
					}
					set(
						$current,
						"predefined",
						lv_predefined_0_0,
						"de.tu_bs.ccc.contracting.Behavior.FBasicTypeId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFTypeRefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFTypeRefAccess().getDerivedFTypeCrossReference_1_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFTypeRefAccess().getIntervalFIntegerIntervalParserRuleCall_2_0());
				}
				lv_interval_2_0=ruleFIntegerInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFTypeRefRule());
					}
					set(
						$current,
						"interval",
						lv_interval_2_0,
						"de.tu_bs.ccc.contracting.Behavior.FIntegerInterval");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFIntegerInterval
entryRuleFIntegerInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFIntegerIntervalRule()); }
	iv_ruleFIntegerInterval=ruleFIntegerInterval
	{ $current=$iv_ruleFIntegerInterval.current; }
	EOF;

// Rule FIntegerInterval
ruleFIntegerInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFIntegerIntervalAccess().getFIntegerIntervalAction_0(),
					$current);
			}
		)
		otherlv_1='Integer'
		{
			newLeafNode(otherlv_1, grammarAccess.getFIntegerIntervalAccess().getIntegerKeyword_1());
		}
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getFIntegerIntervalAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFIntegerIntervalAccess().getLowerBoundINTERVAL_BOUNDParserRuleCall_2_1_0_0());
						}
						lv_lowerBound_3_0=ruleINTERVAL_BOUND
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFIntegerIntervalRule());
							}
							set(
								$current,
								"lowerBound",
								lv_lowerBound_3_0,
								"de.tu_bs.ccc.contracting.Behavior.INTERVAL_BOUND");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				otherlv_4='minInt'
				{
					newLeafNode(otherlv_4, grammarAccess.getFIntegerIntervalAccess().getMinIntKeyword_2_1_1());
				}
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getFIntegerIntervalAccess().getCommaKeyword_2_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFIntegerIntervalAccess().getUpperBoundINTERVAL_BOUNDParserRuleCall_2_3_0_0());
						}
						lv_upperBound_6_0=ruleINTERVAL_BOUND
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFIntegerIntervalRule());
							}
							set(
								$current,
								"upperBound",
								lv_upperBound_6_0,
								"de.tu_bs.ccc.contracting.Behavior.INTERVAL_BOUND");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				otherlv_7='maxInt'
				{
					newLeafNode(otherlv_7, grammarAccess.getFIntegerIntervalAccess().getMaxIntKeyword_2_3_1());
				}
			)
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getFIntegerIntervalAccess().getRightParenthesisKeyword_2_4());
			}
		)?
	)
;

// Entry rule entryRuleINTERVAL_BOUND
entryRuleINTERVAL_BOUND returns [String current=null]:
	{ newCompositeNode(grammarAccess.getINTERVAL_BOUNDRule()); }
	iv_ruleINTERVAL_BOUND=ruleINTERVAL_BOUND
	{ $current=$iv_ruleINTERVAL_BOUND.current.getText(); }
	EOF;

// Rule INTERVAL_BOUND
ruleINTERVAL_BOUND returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getINTERVAL_BOUNDAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getINTERVAL_BOUNDAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleFArrayType
entryRuleFArrayType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFArrayTypeRule()); }
	iv_ruleFArrayType=ruleFArrayType
	{ $current=$iv_ruleFArrayType.current; }
	EOF;

// Rule FArrayType
ruleFArrayType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFArrayTypeAccess().getFArrayTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFArrayTypeAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFArrayTypeRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_public_2_0='public'
				{
					newLeafNode(lv_public_2_0, grammarAccess.getFArrayTypeAccess().getPublicPublicKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFArrayTypeRule());
					}
					setWithLastConsumed($current, "public", true, "public");
				}
			)
		)?
		otherlv_3='array'
		{
			newLeafNode(otherlv_3, grammarAccess.getFArrayTypeAccess().getArrayKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFArrayTypeAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFArrayTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='of'
		{
			newLeafNode(otherlv_5, grammarAccess.getFArrayTypeAccess().getOfKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFArrayTypeAccess().getElementTypeFTypeRefParserRuleCall_6_0());
				}
				lv_elementType_6_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFArrayTypeRule());
					}
					set(
						$current,
						"elementType",
						lv_elementType_6_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFTypeDef
entryRuleFTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFTypeDefRule()); }
	iv_ruleFTypeDef=ruleFTypeDef
	{ $current=$iv_ruleFTypeDef.current; }
	EOF;

// Rule FTypeDef
ruleFTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFTypeDefAccess().getFTypeDefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFTypeDefAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFTypeDefRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_public_2_0='public'
				{
					newLeafNode(lv_public_2_0, grammarAccess.getFTypeDefAccess().getPublicPublicKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFTypeDefRule());
					}
					setWithLastConsumed($current, "public", true, "public");
				}
			)
		)?
		otherlv_3='typedef'
		{
			newLeafNode(otherlv_3, grammarAccess.getFTypeDefAccess().getTypedefKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFTypeDefAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='is'
		{
			newLeafNode(otherlv_5, grammarAccess.getFTypeDefAccess().getIsKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFTypeDefAccess().getActualTypeFTypeRefParserRuleCall_6_0());
				}
				lv_actualType_6_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFTypeDefRule());
					}
					set(
						$current,
						"actualType",
						lv_actualType_6_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFStructType
entryRuleFStructType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFStructTypeRule()); }
	iv_ruleFStructType=ruleFStructType
	{ $current=$iv_ruleFStructType.current; }
	EOF;

// Rule FStructType
ruleFStructType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFStructTypeAccess().getFStructTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFStructTypeAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFStructTypeRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_public_2_0='public'
				{
					newLeafNode(lv_public_2_0, grammarAccess.getFStructTypeAccess().getPublicPublicKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFStructTypeRule());
					}
					setWithLastConsumed($current, "public", true, "public");
				}
			)
		)?
		otherlv_3='struct'
		{
			newLeafNode(otherlv_3, grammarAccess.getFStructTypeAccess().getStructKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFStructTypeAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFStructTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_5='extends'
				{
					newLeafNode(otherlv_5, grammarAccess.getFStructTypeAccess().getExtendsKeyword_5_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFStructTypeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getFStructTypeAccess().getBaseFStructTypeCrossReference_5_0_1_0());
						}
						ruleFQN
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					lv_polymorphic_7_0='polymorphic'
					{
						newLeafNode(lv_polymorphic_7_0, grammarAccess.getFStructTypeAccess().getPolymorphicPolymorphicKeyword_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFStructTypeRule());
						}
						setWithLastConsumed($current, "polymorphic", true, "polymorphic");
					}
				)
			)
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getFStructTypeAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFStructTypeAccess().getElementsFFieldParserRuleCall_7_0());
				}
				lv_elements_9_0=ruleFField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFStructTypeRule());
					}
					add(
						$current,
						"elements",
						lv_elements_9_0,
						"de.tu_bs.ccc.contracting.Behavior.FField");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getFStructTypeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleFUnionType
entryRuleFUnionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFUnionTypeRule()); }
	iv_ruleFUnionType=ruleFUnionType
	{ $current=$iv_ruleFUnionType.current; }
	EOF;

// Rule FUnionType
ruleFUnionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFUnionTypeAccess().getFUnionTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFUnionTypeAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFUnionTypeRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_public_2_0='public'
				{
					newLeafNode(lv_public_2_0, grammarAccess.getFUnionTypeAccess().getPublicPublicKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFUnionTypeRule());
					}
					setWithLastConsumed($current, "public", true, "public");
				}
			)
		)?
		otherlv_3='union'
		{
			newLeafNode(otherlv_3, grammarAccess.getFUnionTypeAccess().getUnionKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFUnionTypeAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFUnionTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='extends'
			{
				newLeafNode(otherlv_5, grammarAccess.getFUnionTypeAccess().getExtendsKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFUnionTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFUnionTypeAccess().getBaseFUnionTypeCrossReference_5_1_0());
					}
					ruleFQN
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getFUnionTypeAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFUnionTypeAccess().getElementsFFieldParserRuleCall_7_0());
				}
				lv_elements_8_0=ruleFField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFUnionTypeRule());
					}
					add(
						$current,
						"elements",
						lv_elements_8_0,
						"de.tu_bs.ccc.contracting.Behavior.FField");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getFUnionTypeAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); }
	iv_ruleLogicalOrExpression=ruleLogicalOrExpression
	{ $current=$iv_ruleLogicalOrExpression.current; }
	EOF;

// Rule LogicalOrExpression
ruleLogicalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
		}
		this_LogicalAndExpression_0=ruleLogicalAndExpression
		{
			$current = $this_LogicalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalOrExpressionAccess().getFBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOpOperatorOrEnumRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOperatorOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.tu_bs.ccc.contracting.Behavior.OperatorOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getRightLogicalAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleLogicalAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tu_bs.ccc.contracting.Behavior.LogicalAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); }
	iv_ruleLogicalAndExpression=ruleLogicalAndExpression
	{ $current=$iv_ruleLogicalAndExpression.current; }
	EOF;

// Rule LogicalAndExpression
ruleLogicalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalAndExpressionAccess().getFBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOpOperatorAndEnumRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOperatorAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.tu_bs.ccc.contracting.Behavior.OperatorAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tu_bs.ccc.contracting.Behavior.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getFBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpOperatorEqualityEnumRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOperatorEquality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.tu_bs.ccc.contracting.Behavior.OperatorEquality");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tu_bs.ccc.contracting.Behavior.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationalExpressionAccess().getFBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOperatorRelationalEnumRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOperatorRelational
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.tu_bs.ccc.contracting.Behavior.OperatorRelational");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tu_bs.ccc.contracting.Behavior.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditiveExpressionAccess().getFBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpOperatorAdditiveEnumRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOperatorAdditive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.tu_bs.ccc.contracting.Behavior.OperatorAdditive");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tu_bs.ccc.contracting.Behavior.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicativeExpressionAccess().getFBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpOperatorMultiplicativeEnumRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOperatorMultiplicative
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"de.tu_bs.ccc.contracting.Behavior.OperatorMultiplicative");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.tu_bs.ccc.contracting.Behavior.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFUnaryOperationParserRuleCall_0());
		}
		this_FUnaryOperation_0=ruleFUnaryOperation
		{
			$current = $this_FUnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSimplePrimaryExpressionParserRuleCall_1());
		}
		this_SimplePrimaryExpression_1=ruleSimplePrimaryExpression
		{
			$current = $this_SimplePrimaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimplePrimaryExpression
entryRuleSimplePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimplePrimaryExpressionRule()); }
	iv_ruleSimplePrimaryExpression=ruleSimplePrimaryExpression
	{ $current=$iv_ruleSimplePrimaryExpression.current; }
	EOF;

// Rule SimplePrimaryExpression
ruleSimplePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimplePrimaryExpressionAccess().getFQualifiedElementRefParserRuleCall_0());
		}
		this_FQualifiedElementRef_0=ruleFQualifiedElementRef
		{
			$current = $this_FQualifiedElementRef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimplePrimaryExpressionAccess().getFConstantParserRuleCall_1());
		}
		this_FConstant_1=ruleFConstant
		{
			$current = $this_FConstant_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getSimplePrimaryExpressionAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getSimplePrimaryExpressionAccess().getLogicalOrExpressionParserRuleCall_2_1());
			}
			this_LogicalOrExpression_3=ruleLogicalOrExpression
			{
				$current = $this_LogicalOrExpression_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getSimplePrimaryExpressionAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleFUnaryOperation
entryRuleFUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFUnaryOperationRule()); }
	iv_ruleFUnaryOperation=ruleFUnaryOperation
	{ $current=$iv_ruleFUnaryOperation.current; }
	EOF;

// Rule FUnaryOperation
ruleFUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFUnaryOperationAccess().getFUnaryOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFUnaryOperationAccess().getOpOperatorUnaryEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleOperatorUnary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFUnaryOperationRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"de.tu_bs.ccc.contracting.Behavior.OperatorUnary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFUnaryOperationAccess().getOperandSimplePrimaryExpressionParserRuleCall_2_0());
				}
				lv_operand_2_0=ruleSimplePrimaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFUnaryOperationRule());
					}
					set(
						$current,
						"operand",
						lv_operand_2_0,
						"de.tu_bs.ccc.contracting.Behavior.SimplePrimaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFQualifiedElementRef
entryRuleFQualifiedElementRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFQualifiedElementRefRule()); }
	iv_ruleFQualifiedElementRef=ruleFQualifiedElementRef
	{ $current=$iv_ruleFQualifiedElementRef.current; }
	EOF;

// Rule FQualifiedElementRef
ruleFQualifiedElementRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFQualifiedElementRefAccess().getFQualifiedElementRefAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFQualifiedElementRefAccess().getElementFQNParserRuleCall_1_0());
				}
				lv_element_1_0=ruleFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFQualifiedElementRefRule());
					}
					set(
						$current,
						"element",
						lv_element_1_0,
						"de.tu_bs.ccc.contracting.Behavior.FQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getFQualifiedElementRefAccess().getFQualifiedElementRefQualifierAction_2_0(),
						$current);
				}
			)
			otherlv_3='-->'
			{
				newLeafNode(otherlv_3, grammarAccess.getFQualifiedElementRefAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFQualifiedElementRefRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getFQualifiedElementRefAccess().getFieldFFieldCrossReference_2_2_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFConstant
entryRuleFConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFConstantRule()); }
	iv_ruleFConstant=ruleFConstant
	{ $current=$iv_ruleFConstant.current; }
	EOF;

// Rule FConstant
ruleFConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFConstantAccess().getFFloatConstantParserRuleCall_0());
		}
		this_FFloatConstant_0=ruleFFloatConstant
		{
			$current = $this_FFloatConstant_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFConstantAccess().getFDoubleConstantParserRuleCall_1());
		}
		this_FDoubleConstant_1=ruleFDoubleConstant
		{
			$current = $this_FDoubleConstant_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFConstantAccess().getFIntegerConstantParserRuleCall_2());
		}
		this_FIntegerConstant_2=ruleFIntegerConstant
		{
			$current = $this_FIntegerConstant_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFConstantAccess().getFBooleanConstantParserRuleCall_3());
		}
		this_FBooleanConstant_3=ruleFBooleanConstant
		{
			$current = $this_FBooleanConstant_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFConstantAccess().getFStringConstantParserRuleCall_4());
		}
		this_FStringConstant_4=ruleFStringConstant
		{
			$current = $this_FStringConstant_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFDoubleConstant
entryRuleFDoubleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFDoubleConstantRule()); }
	iv_ruleFDoubleConstant=ruleFDoubleConstant
	{ $current=$iv_ruleFDoubleConstant.current; }
	EOF;

// Rule FDoubleConstant
ruleFDoubleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_E_DOUBLE_OBJECT
			{
				newLeafNode(lv_val_0_0, grammarAccess.getFDoubleConstantAccess().getValE_DOUBLE_OBJECTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFDoubleConstantRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"de.tu_bs.ccc.contracting.Behavior.E_DOUBLE_OBJECT");
			}
		)
	)
;

// Entry rule entryRuleFFloatConstant
entryRuleFFloatConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFFloatConstantRule()); }
	iv_ruleFFloatConstant=ruleFFloatConstant
	{ $current=$iv_ruleFFloatConstant.current; }
	EOF;

// Rule FFloatConstant
ruleFFloatConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_E_FLOAT_OBJECT
			{
				newLeafNode(lv_val_0_0, grammarAccess.getFFloatConstantAccess().getValE_FLOAT_OBJECTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFFloatConstantRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"de.tu_bs.ccc.contracting.Behavior.E_FLOAT_OBJECT");
			}
		)
	)
;

// Entry rule entryRuleFIntegerConstant
entryRuleFIntegerConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFIntegerConstantRule()); }
	iv_ruleFIntegerConstant=ruleFIntegerConstant
	{ $current=$iv_ruleFIntegerConstant.current; }
	EOF;

// Rule FIntegerConstant
ruleFIntegerConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFIntegerConstantAccess().getValE_BigIntegerParserRuleCall_0());
			}
			lv_val_0_0=ruleE_BigInteger
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFIntegerConstantRule());
				}
				set(
					$current,
					"val",
					lv_val_0_0,
					"de.tu_bs.ccc.contracting.Behavior.E_BigInteger");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFBooleanConstant
entryRuleFBooleanConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFBooleanConstantRule()); }
	iv_ruleFBooleanConstant=ruleFBooleanConstant
	{ $current=$iv_ruleFBooleanConstant.current; }
	EOF;

// Rule FBooleanConstant
ruleFBooleanConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFBooleanConstantAccess().getValEBooleanParserRuleCall_0());
			}
			lv_val_0_0=ruleEBoolean
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFBooleanConstantRule());
				}
				set(
					$current,
					"val",
					lv_val_0_0,
					"de.tu_bs.ccc.contracting.Behavior.EBoolean");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFStringConstant
entryRuleFStringConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFStringConstantRule()); }
	iv_ruleFStringConstant=ruleFStringConstant
	{ $current=$iv_ruleFStringConstant.current; }
	EOF;

// Rule FStringConstant
ruleFStringConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_STRING
			{
				newLeafNode(lv_val_0_0, grammarAccess.getFStringConstantAccess().getValSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFStringConstantRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleFMapType
entryRuleFMapType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFMapTypeRule()); }
	iv_ruleFMapType=ruleFMapType
	{ $current=$iv_ruleFMapType.current; }
	EOF;

// Rule FMapType
ruleFMapType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFMapTypeAccess().getFMapTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFMapTypeAccess().getCommentAnnotationBlockParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFMapTypeRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_public_2_0='public'
				{
					newLeafNode(lv_public_2_0, grammarAccess.getFMapTypeAccess().getPublicPublicKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFMapTypeRule());
					}
					setWithLastConsumed($current, "public", true, "public");
				}
			)
		)?
		otherlv_3='map'
		{
			newLeafNode(otherlv_3, grammarAccess.getFMapTypeAccess().getMapKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFMapTypeAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFMapTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getFMapTypeAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFMapTypeAccess().getKeyTypeFTypeRefParserRuleCall_6_0());
				}
				lv_keyType_6_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFMapTypeRule());
					}
					set(
						$current,
						"keyType",
						lv_keyType_6_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getFMapTypeAccess().getToKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFMapTypeAccess().getValueTypeFTypeRefParserRuleCall_8_0());
				}
				lv_valueType_8_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFMapTypeRule());
					}
					set(
						$current,
						"valueType",
						lv_valueType_8_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getFMapTypeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleFField
entryRuleFField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFFieldRule()); }
	iv_ruleFField=ruleFField
	{ $current=$iv_ruleFField.current; }
	EOF;

// Rule FField
ruleFField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFFieldAccess().getCommentAnnotationBlockParserRuleCall_0_0());
				}
				lv_comment_0_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFFieldRule());
					}
					set(
						$current,
						"comment",
						lv_comment_0_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFFieldAccess().getTypeFTypeRefParserRuleCall_1_0());
				}
				lv_type_1_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFFieldRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_array_2_0='['
					{
						newLeafNode(lv_array_2_0, grammarAccess.getFFieldAccess().getArrayLeftSquareBracketKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFFieldRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getFFieldAccess().getRightSquareBracketKeyword_2_1());
			}
		)?
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFFieldAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFDeclaration
entryRuleFDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFDeclarationRule()); }
	iv_ruleFDeclaration=ruleFDeclaration
	{ $current=$iv_ruleFDeclaration.current; }
	EOF;

// Rule FDeclaration
ruleFDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFDeclarationAccess().getTypeFTypeRefParserRuleCall_0_0());
				}
				lv_type_0_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_array_1_0='['
					{
						newLeafNode(lv_array_1_0, grammarAccess.getFDeclarationAccess().getArrayLeftSquareBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFDeclarationRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			otherlv_2=']'
			{
				newLeafNode(otherlv_2, grammarAccess.getFDeclarationAccess().getRightSquareBracketKeyword_1_1());
			}
		)?
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFDeclarationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getFDeclarationAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFDeclarationAccess().getRhsFInitializerExpressionParserRuleCall_3_1_0());
					}
					lv_rhs_5_0=ruleFInitializerExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFDeclarationRule());
						}
						set(
							$current,
							"rhs",
							lv_rhs_5_0,
							"de.tu_bs.ccc.contracting.Behavior.FInitializerExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFArgument
entryRuleFArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFArgumentRule()); }
	iv_ruleFArgument=ruleFArgument
	{ $current=$iv_ruleFArgument.current; }
	EOF;

// Rule FArgument
ruleFArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFArgumentAccess().getCommentAnnotationBlockParserRuleCall_0_0());
				}
				lv_comment_0_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFArgumentRule());
					}
					set(
						$current,
						"comment",
						lv_comment_0_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFArgumentAccess().getTypeFTypeRefParserRuleCall_1_0());
				}
				lv_type_1_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFArgumentRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_array_2_0='['
					{
						newLeafNode(lv_array_2_0, grammarAccess.getFArgumentAccess().getArrayLeftSquareBracketKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFArgumentRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getFArgumentAccess().getRightSquareBracketKeyword_2_1());
			}
		)?
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getFArgumentAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFConstantDef
entryRuleFConstantDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFConstantDefRule()); }
	iv_ruleFConstantDef=ruleFConstantDef
	{ $current=$iv_ruleFConstantDef.current; }
	EOF;

// Rule FConstantDef
ruleFConstantDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFConstantDefAccess().getCommentAnnotationBlockParserRuleCall_0_0());
				}
				lv_comment_0_0=ruleAnnotationBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFConstantDefRule());
					}
					set(
						$current,
						"comment",
						lv_comment_0_0,
						"de.tu_bs.ccc.contracting.Behavior.AnnotationBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='const'
		{
			newLeafNode(otherlv_1, grammarAccess.getFConstantDefAccess().getConstKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFConstantDefAccess().getTypeFTypeRefParserRuleCall_2_0());
				}
				lv_type_2_0=ruleFTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFConstantDefRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"de.tu_bs.ccc.contracting.Behavior.FTypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_array_3_0='['
					{
						newLeafNode(lv_array_3_0, grammarAccess.getFConstantDefAccess().getArrayLeftSquareBracketKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFConstantDefRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getFConstantDefAccess().getRightSquareBracketKeyword_3_1());
			}
		)?
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getFConstantDefAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFConstantDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getFConstantDefAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFConstantDefAccess().getRhsFInitializerExpressionParserRuleCall_6_0());
				}
				lv_rhs_7_0=ruleFInitializerExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFConstantDefRule());
					}
					set(
						$current,
						"rhs",
						lv_rhs_7_0,
						"de.tu_bs.ccc.contracting.Behavior.FInitializerExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFInitializerExpression
entryRuleFInitializerExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFInitializerExpressionRule()); }
	iv_ruleFInitializerExpression=ruleFInitializerExpression
	{ $current=$iv_ruleFInitializerExpression.current; }
	EOF;

// Rule FInitializerExpression
ruleFInitializerExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFInitializerExpressionAccess().getFInitializerParserRuleCall());
	}
	this_FInitializer_0=ruleFInitializer
	{
		$current = $this_FInitializer_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleFInitializer
entryRuleFInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFInitializerRule()); }
	iv_ruleFInitializer=ruleFInitializer
	{ $current=$iv_ruleFInitializer.current; }
	EOF;

// Rule FInitializer
ruleFInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFInitializerAccess().getFCompoundInitializerParserRuleCall_0());
		}
		this_FCompoundInitializer_0=ruleFCompoundInitializer
		{
			$current = $this_FCompoundInitializer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFInitializerAccess().getFBracketInitializerParserRuleCall_1());
		}
		this_FBracketInitializer_1=ruleFBracketInitializer
		{
			$current = $this_FBracketInitializer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFCompoundInitializer
entryRuleFCompoundInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFCompoundInitializerRule()); }
	iv_ruleFCompoundInitializer=ruleFCompoundInitializer
	{ $current=$iv_ruleFCompoundInitializer.current; }
	EOF;

// Rule FCompoundInitializer
ruleFCompoundInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFCompoundInitializerAccess().getFCompoundInitializerAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFCompoundInitializerAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFCompoundInitializerAccess().getElementsFFieldInitializerParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleFFieldInitializer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFCompoundInitializerRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"de.tu_bs.ccc.contracting.Behavior.FFieldInitializer");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFCompoundInitializerAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFCompoundInitializerAccess().getElementsFFieldInitializerParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleFFieldInitializer
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFCompoundInitializerRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"de.tu_bs.ccc.contracting.Behavior.FFieldInitializer");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFCompoundInitializerAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFFieldInitializer
entryRuleFFieldInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFFieldInitializerRule()); }
	iv_ruleFFieldInitializer=ruleFFieldInitializer
	{ $current=$iv_ruleFFieldInitializer.current; }
	EOF;

// Rule FFieldInitializer
ruleFFieldInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFFieldInitializerRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFFieldInitializerAccess().getElementFFieldCrossReference_0_0());
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFFieldInitializerAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFFieldInitializerAccess().getValueFInitializerExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleFInitializerExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFFieldInitializerRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.tu_bs.ccc.contracting.Behavior.FInitializerExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFBracketInitializer
entryRuleFBracketInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFBracketInitializerRule()); }
	iv_ruleFBracketInitializer=ruleFBracketInitializer
	{ $current=$iv_ruleFBracketInitializer.current; }
	EOF;

// Rule FBracketInitializer
ruleFBracketInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFBracketInitializerAccess().getFBracketInitializerAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getFBracketInitializerAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFBracketInitializerAccess().getElementsFElementInitializerParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleFElementInitializer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFBracketInitializerRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"de.tu_bs.ccc.contracting.Behavior.FElementInitializer");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFBracketInitializerAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFBracketInitializerAccess().getElementsFElementInitializerParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleFElementInitializer
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFBracketInitializerRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"de.tu_bs.ccc.contracting.Behavior.FElementInitializer");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getFBracketInitializerAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleFElementInitializer
entryRuleFElementInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFElementInitializerRule()); }
	iv_ruleFElementInitializer=ruleFElementInitializer
	{ $current=$iv_ruleFElementInitializer.current; }
	EOF;

// Rule FElementInitializer
ruleFElementInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFElementInitializerAccess().getFElementInitializerAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFElementInitializerAccess().getFirstFInitializerExpressionParserRuleCall_1_0());
				}
				lv_first_1_0=ruleFInitializerExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFElementInitializerRule());
					}
					set(
						$current,
						"first",
						lv_first_1_0,
						"de.tu_bs.ccc.contracting.Behavior.FInitializerExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getFElementInitializerAccess().getEqualsSignGreaterThanSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFElementInitializerAccess().getSecondFInitializerExpressionParserRuleCall_2_1_0());
					}
					lv_second_3_0=ruleFInitializerExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFElementInitializerRule());
						}
						set(
							$current,
							"second",
							lv_second_3_0,
							"de.tu_bs.ccc.contracting.Behavior.FInitializerExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDetailCode
entryRuleDetailCode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDetailCodeRule()); }
	iv_ruleDetailCode=ruleDetailCode
	{ $current=$iv_ruleDetailCode.current; }
	EOF;

// Rule DetailCode
ruleDetailCode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getDetailCodeAccess().getDetailCodeAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_lines_1_0=RULE_CC_STRING
					{
						newLeafNode(lv_lines_1_0, grammarAccess.getDetailCodeAccess().getLinesCC_STRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDetailCodeRule());
						}
						addWithLastConsumed(
							$current,
							"lines",
							lv_lines_1_0,
							"de.tu_bs.ccc.contracting.Behavior.CC_STRING");
					}
				)
			)?
		)
		    |
		(
			(
				(
					lv_used_2_0='{'
					{
						newLeafNode(lv_used_2_0, grammarAccess.getDetailCodeAccess().getUsedLeftCurlyBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDetailCodeRule());
						}
						setWithLastConsumed($current, "used", true, "{");
					}
				)
			)
			(
				(
					lv_lines_3_0=RULE_STRING
					{
						newLeafNode(lv_lines_3_0, grammarAccess.getDetailCodeAccess().getLinesSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDetailCodeRule());
						}
						addWithLastConsumed(
							$current,
							"lines",
							lv_lines_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)*
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getDetailCodeAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleAnnotationBlock
entryRuleAnnotationBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationBlockRule()); }
	iv_ruleAnnotationBlock=ruleAnnotationBlock
	{ $current=$iv_ruleAnnotationBlock.current; }
	EOF;

// Rule AnnotationBlock
ruleAnnotationBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='/*'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationBlockAccess().getSolidusAsteriskKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotationBlockAccess().getElementsAnnotationParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotationBlockRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"de.tu_bs.ccc.contracting.Behavior.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='*/'
		{
			newLeafNode(otherlv_2, grammarAccess.getAnnotationBlockAccess().getAsteriskSolidusKeyword_2());
		}
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_rawText_0_0=RULE_ANNOTATION_STRING
			{
				newLeafNode(lv_rawText_0_0, grammarAccess.getAnnotationAccess().getRawTextANNOTATION_STRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAnnotationRule());
				}
				setWithLastConsumed(
					$current,
					"rawText",
					lv_rawText_0_0,
					"de.tu_bs.ccc.contracting.Behavior.ANNOTATION_STRING");
			}
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0_0_0());
						}
						lv_importedNamespace_1_0=ruleImportedFQN
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportRule());
							}
							set(
								$current,
								"importedNamespace",
								lv_importedNamespace_1_0,
								"de.tu_bs.ccc.contracting.Behavior.ImportedFQN");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2='from'
				{
					newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_1_0_1());
				}
			)
			    |
			otherlv_3='model'
			{
				newLeafNode(otherlv_3, grammarAccess.getImportAccess().getModelKeyword_1_1());
			}
		)
		(
			(
				lv_importURI_4_0=RULE_STRING
				{
					newLeafNode(lv_importURI_4_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_5='as'
			{
				newLeafNode(otherlv_5, grammarAccess.getImportAccess().getAsKeyword_3_0());
			}
			(
				(
					lv_alias_6_0=RULE_ID
					{
						newLeafNode(lv_alias_6_0, grammarAccess.getImportAccess().getAliasIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getImportAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleImportedFQN
entryRuleImportedFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportedFQNRule()); }
	iv_ruleImportedFQN=ruleImportedFQN
	{ $current=$iv_ruleImportedFQN.current.getText(); }
	EOF;

// Rule ImportedFQN
ruleImportedFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0());
		}
		this_FQN_0=ruleFQN
		{
			$current.merge(this_FQN_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportedFQNAccess().getFullStopKeyword_1_0());
			}
			kw='*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportedFQNAccess().getAsteriskKeyword_1_1());
			}
		)?
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_0());
		}
		    |
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_1());
		}
	)
;

// Entry rule entryRuleE_BigInteger
entryRuleE_BigInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getE_BigIntegerRule()); }
	iv_ruleE_BigInteger=ruleE_BigInteger
	{ $current=$iv_ruleE_BigInteger.current.getText(); }
	EOF;

// Rule E_BigInteger
ruleE_BigInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getE_BigIntegerAccess().getINTTerminalRuleCall());
	}
;

// Rule FBasicTypeId
ruleFBasicTypeId returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='undefined'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getUndefinedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFBasicTypeIdAccess().getUndefinedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Int8'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getInt8EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFBasicTypeIdAccess().getInt8EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='UInt8'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getUInt8EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFBasicTypeIdAccess().getUInt8EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Int16'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getInt16EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFBasicTypeIdAccess().getInt16EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='UInt16'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getUInt16EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFBasicTypeIdAccess().getUInt16EnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Int32'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getInt32EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getFBasicTypeIdAccess().getInt32EnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='UInt32'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getUInt32EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getFBasicTypeIdAccess().getUInt32EnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Int64'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getInt64EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getFBasicTypeIdAccess().getInt64EnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='UInt64'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getUInt64EnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getFBasicTypeIdAccess().getUInt64EnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='Boolean'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getBooleanEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getFBasicTypeIdAccess().getBooleanEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='String'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getStringEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getFBasicTypeIdAccess().getStringEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='Float'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getFloatEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getFBasicTypeIdAccess().getFloatEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='Double'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getDoubleEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getFBasicTypeIdAccess().getDoubleEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='ByteBuffer'
			{
				$current = grammarAccess.getFBasicTypeIdAccess().getByteBufferEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getFBasicTypeIdAccess().getByteBufferEnumLiteralDeclaration_13());
			}
		)
	)
;

// Rule OperatorOr
ruleOperatorOr returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='||'
		{
			$current = grammarAccess.getOperatorOrAccess().getOrEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getOperatorOrAccess().getOrEnumLiteralDeclaration());
		}
	)
;

// Rule OperatorAnd
ruleOperatorAnd returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='&&'
		{
			$current = grammarAccess.getOperatorAndAccess().getAndEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getOperatorAndAccess().getAndEnumLiteralDeclaration());
		}
	)
;

// Rule OperatorEquality
ruleOperatorEquality returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getOperatorEqualityAccess().getEqualEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorEqualityAccess().getEqualEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!='
			{
				$current = grammarAccess.getOperatorEqualityAccess().getUnequalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorEqualityAccess().getUnequalEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule OperatorRelational
ruleOperatorRelational returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getOperatorRelationalAccess().getSmallerEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorRelationalAccess().getSmallerEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getOperatorRelationalAccess().getSmallerOrEqualEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorRelationalAccess().getSmallerOrEqualEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>='
			{
				$current = grammarAccess.getOperatorRelationalAccess().getGreaterOrEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperatorRelationalAccess().getGreaterOrEqualEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>'
			{
				$current = grammarAccess.getOperatorRelationalAccess().getGreaterEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperatorRelationalAccess().getGreaterEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule OperatorAdditive
ruleOperatorAdditive returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getOperatorAdditiveAccess().getAdditionEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorAdditiveAccess().getAdditionEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getOperatorAdditiveAccess().getSubtractionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorAdditiveAccess().getSubtractionEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule OperatorMultiplicative
ruleOperatorMultiplicative returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='*'
			{
				$current = grammarAccess.getOperatorMultiplicativeAccess().getMultiplicationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorMultiplicativeAccess().getMultiplicationEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='/'
			{
				$current = grammarAccess.getOperatorMultiplicativeAccess().getDivisionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorMultiplicativeAccess().getDivisionEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule OperatorUnary
ruleOperatorUnary returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='!'
			{
				$current = grammarAccess.getOperatorUnaryAccess().getNegationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorUnaryAccess().getNegationEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getOperatorUnaryAccess().getSubtractionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorUnaryAccess().getSubtractionEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ANNOTATION_STRING : '@' ('a'..'z'|'-')+ (' '|'\t')* ':' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|('\\*'|'\\@')|~(('\\'|'*'|'@')))*;

RULE_CC_STRING : '\'\'\'' ( options {greedy=false;} : . )*'\'\'\'';

RULE_E_DOUBLE_OBJECT : RULE_INT '.' RULE_INT ('e' '-'? RULE_INT)? 'd';

RULE_E_FLOAT_OBJECT : RULE_INT '.' RULE_INT ('e' '-'? RULE_INT)? 'f';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
