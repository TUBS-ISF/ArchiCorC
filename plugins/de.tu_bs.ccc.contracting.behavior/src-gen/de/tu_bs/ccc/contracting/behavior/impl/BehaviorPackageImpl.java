/**
 * generated by Xtext 2.20.0
 */
package de.tu_bs.ccc.contracting.behavior.impl;

import de.tu_bs.ccc.contracting.behavior.Annotation;
import de.tu_bs.ccc.contracting.behavior.AnnotationBlock;
import de.tu_bs.ccc.contracting.behavior.Behavior;
import de.tu_bs.ccc.contracting.behavior.BehaviorFactory;
import de.tu_bs.ccc.contracting.behavior.BehaviorModel;
import de.tu_bs.ccc.contracting.behavior.BehaviorPackage;
import de.tu_bs.ccc.contracting.behavior.Broadcast;
import de.tu_bs.ccc.contracting.behavior.ContractPair;
import de.tu_bs.ccc.contracting.behavior.DetailCode;
import de.tu_bs.ccc.contracting.behavior.Ensures;
import de.tu_bs.ccc.contracting.behavior.Event;
import de.tu_bs.ccc.contracting.behavior.EventBinding;
import de.tu_bs.ccc.contracting.behavior.EventOnIf;
import de.tu_bs.ccc.contracting.behavior.EventTrigger;
import de.tu_bs.ccc.contracting.behavior.FArgument;
import de.tu_bs.ccc.contracting.behavior.FArrayType;
import de.tu_bs.ccc.contracting.behavior.FBasicTypeId;
import de.tu_bs.ccc.contracting.behavior.FBinaryOperation;
import de.tu_bs.ccc.contracting.behavior.FBooleanConstant;
import de.tu_bs.ccc.contracting.behavior.FBracketInitializer;
import de.tu_bs.ccc.contracting.behavior.FCompoundInitializer;
import de.tu_bs.ccc.contracting.behavior.FConstantDef;
import de.tu_bs.ccc.contracting.behavior.FDeclaration;
import de.tu_bs.ccc.contracting.behavior.FDoubleConstant;
import de.tu_bs.ccc.contracting.behavior.FElementInitializer;
import de.tu_bs.ccc.contracting.behavior.FEventOnIf;
import de.tu_bs.ccc.contracting.behavior.FExpression;
import de.tu_bs.ccc.contracting.behavior.FField;
import de.tu_bs.ccc.contracting.behavior.FFieldInitializer;
import de.tu_bs.ccc.contracting.behavior.FFloatConstant;
import de.tu_bs.ccc.contracting.behavior.FGuard;
import de.tu_bs.ccc.contracting.behavior.FInitializer;
import de.tu_bs.ccc.contracting.behavior.FInitializerExpression;
import de.tu_bs.ccc.contracting.behavior.FIntegerConstant;
import de.tu_bs.ccc.contracting.behavior.FIntegerInterval;
import de.tu_bs.ccc.contracting.behavior.FMapType;
import de.tu_bs.ccc.contracting.behavior.FOperator;
import de.tu_bs.ccc.contracting.behavior.FQualifiedElementRef;
import de.tu_bs.ccc.contracting.behavior.FState;
import de.tu_bs.ccc.contracting.behavior.FStateGraph;
import de.tu_bs.ccc.contracting.behavior.FStringConstant;
import de.tu_bs.ccc.contracting.behavior.FStructType;
import de.tu_bs.ccc.contracting.behavior.FTransition;
import de.tu_bs.ccc.contracting.behavior.FTrigger;
import de.tu_bs.ccc.contracting.behavior.FType;
import de.tu_bs.ccc.contracting.behavior.FTypeDef;
import de.tu_bs.ccc.contracting.behavior.FTypeRef;
import de.tu_bs.ccc.contracting.behavior.FTypedElement;
import de.tu_bs.ccc.contracting.behavior.FUnaryOperation;
import de.tu_bs.ccc.contracting.behavior.FUnionType;
import de.tu_bs.ccc.contracting.behavior.Import;
import de.tu_bs.ccc.contracting.behavior.MethodSignature;
import de.tu_bs.ccc.contracting.behavior.Operation;
import de.tu_bs.ccc.contracting.behavior.RefableType;
import de.tu_bs.ccc.contracting.behavior.Requires;
import de.tu_bs.ccc.contracting.behavior.Signal;
import de.tu_bs.ccc.contracting.behavior.SignalSignature;
import de.tu_bs.ccc.contracting.behavior.SpecificationBlock;
import de.tu_bs.ccc.contracting.behavior.StandardOperation;
import de.tu_bs.ccc.contracting.behavior.VarDecl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BehaviorPackageImpl extends EPackageImpl implements BehaviorPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass signalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass signalSignatureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventBindingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventTriggerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventOnIfEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodSignatureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass standardOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass varDeclEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass refableTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specificationBlockEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass contractPairEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass requiresEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ensuresEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fStateGraphEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fStateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTransitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTriggerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fEventOnIfEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass broadcastEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fGuardEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypeRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fIntegerIntervalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fArrayTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypeDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fStructTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fUnionTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fQualifiedElementRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fDoubleConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fFloatConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fIntegerConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fBooleanConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fStringConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fMapTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fTypedElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fArgumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fConstantDefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fInitializerExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fInitializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fCompoundInitializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fFieldInitializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fBracketInitializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fElementInitializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass detailCodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass annotationBlockEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass annotationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fBinaryOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fUnaryOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum fBasicTypeIdEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum fOperatorEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.tu_bs.ccc.contracting.behavior.BehaviorPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BehaviorPackageImpl()
  {
    super(eNS_URI, BehaviorFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link BehaviorPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BehaviorPackage init()
  {
    if (isInited) return (BehaviorPackage)EPackage.Registry.INSTANCE.getEPackage(BehaviorPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredBehaviorPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    BehaviorPackageImpl theBehaviorPackage = registeredBehaviorPackage instanceof BehaviorPackageImpl ? (BehaviorPackageImpl)registeredBehaviorPackage : new BehaviorPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theBehaviorPackage.createPackageContents();

    // Initialize created meta-data
    theBehaviorPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBehaviorPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BehaviorPackage.eNS_URI, theBehaviorPackage);
    return theBehaviorPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorModel()
  {
    return behaviorModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehaviorModel_Name()
  {
    return (EAttribute)behaviorModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_Imports()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorModel_Behaviors()
  {
    return (EReference)behaviorModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehavior()
  {
    return behaviorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehavior_Comment()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehavior_Name()
  {
    return (EAttribute)behaviorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBehavior_ComponentName()
  {
    return (EAttribute)behaviorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehavior_Variables()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehavior_Events()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehavior_Signals()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehavior_Operations()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehavior_StateGraphs()
  {
    return (EReference)behaviorEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSignal()
  {
    return signalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSignal_Comment()
  {
    return (EReference)signalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSignal_Signal()
  {
    return (EReference)signalEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSignalSignature()
  {
    return signalSignatureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSignalSignature_Name()
  {
    return (EAttribute)signalSignatureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSignalSignature_Arguments()
  {
    return (EReference)signalSignatureEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventBinding()
  {
    return eventBindingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventBinding_Comment()
  {
    return (EReference)eventBindingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventBinding_Trigger()
  {
    return (EReference)eventBindingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventBinding_To()
  {
    return (EReference)eventBindingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventTrigger()
  {
    return eventTriggerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventTrigger_Event()
  {
    return (EReference)eventTriggerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventOnIf()
  {
    return eventOnIfEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOnIf_Freq()
  {
    return (EAttribute)eventOnIfEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventOnIf_Condition()
  {
    return (EReference)eventOnIfEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventOnIf_Call()
  {
    return (EReference)eventOnIfEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOnIf_Event()
  {
    return (EAttribute)eventOnIfEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventOnIf_Signal()
  {
    return (EAttribute)eventOnIfEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodSignature()
  {
    return methodSignatureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodSignature_Name()
  {
    return (EAttribute)methodSignatureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodSignature_Arguments()
  {
    return (EReference)methodSignatureEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodSignature_ReturnType()
  {
    return (EReference)methodSignatureEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEvent()
  {
    return eventEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvent_Name()
  {
    return (EAttribute)eventEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEvent_Arguments()
  {
    return (EAttribute)eventEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOperation()
  {
    return operationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStandardOperation()
  {
    return standardOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStandardOperation_Comment()
  {
    return (EReference)standardOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStandardOperation_Override()
  {
    return (EAttribute)standardOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStandardOperation_Name()
  {
    return (EAttribute)standardOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStandardOperation_Arguments()
  {
    return (EReference)standardOperationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStandardOperation_ReturnType()
  {
    return (EReference)standardOperationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStandardOperation_Array()
  {
    return (EAttribute)standardOperationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStandardOperation_Contract()
  {
    return (EReference)standardOperationEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStandardOperation_DetailCode()
  {
    return (EReference)standardOperationEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVarDecl()
  {
    return varDeclEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVarDecl_Name()
  {
    return (EAttribute)varDeclEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVarDecl_RefType()
  {
    return (EReference)varDeclEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVarDecl_Array()
  {
    return (EAttribute)varDeclEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVarDecl_Varargs()
  {
    return (EAttribute)varDeclEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRefableType()
  {
    return refableTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRefableType_Type()
  {
    return (EReference)refableTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRefableType_Ref()
  {
    return (EAttribute)refableTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSpecificationBlock()
  {
    return specificationBlockEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSpecificationBlock_Comment()
  {
    return (EReference)specificationBlockEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSpecificationBlock_Contracts()
  {
    return (EReference)specificationBlockEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContractPair()
  {
    return contractPairEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContractPair_Req()
  {
    return (EReference)contractPairEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContractPair_Ens()
  {
    return (EReference)contractPairEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRequires()
  {
    return requiresEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRequires_Expr()
  {
    return (EAttribute)requiresEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnsures()
  {
    return ensuresEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnsures_Expr()
  {
    return (EAttribute)ensuresEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFStateGraph()
  {
    return fStateGraphEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFStateGraph_Initial()
  {
    return (EReference)fStateGraphEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFStateGraph_States()
  {
    return (EReference)fStateGraphEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFState()
  {
    return fStateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFState_Comment()
  {
    return (EReference)fStateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFState_Name()
  {
    return (EAttribute)fStateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFState_EntryAction()
  {
    return (EAttribute)fStateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFState_BroadcastEntry()
  {
    return (EReference)fStateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFState_ExitAction()
  {
    return (EAttribute)fStateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFState_BroadcastExit()
  {
    return (EReference)fStateEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFState_DoAction()
  {
    return (EAttribute)fStateEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFState_BoradcastDo()
  {
    return (EReference)fStateEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFState_Transitions()
  {
    return (EReference)fStateEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFTransition()
  {
    return fTransitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTransition_Trigger()
  {
    return (EReference)fTransitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTransition_Guard()
  {
    return (EReference)fTransitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTransition_To()
  {
    return (EReference)fTransitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFTransition_Action()
  {
    return (EAttribute)fTransitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTransition_Broadcast()
  {
    return (EReference)fTransitionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFTrigger()
  {
    return fTriggerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTrigger_Event()
  {
    return (EReference)fTriggerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFEventOnIf()
  {
    return fEventOnIfEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFEventOnIf_Name()
  {
    return (EReference)fEventOnIfEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBroadcast()
  {
    return broadcastEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBroadcast_Signal()
  {
    return (EAttribute)broadcastEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBroadcast_Arguments()
  {
    return (EAttribute)broadcastEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFGuard()
  {
    return fGuardEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFGuard_Condition()
  {
    return (EReference)fGuardEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFTypeRef()
  {
    return fTypeRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFTypeRef_Predefined()
  {
    return (EAttribute)fTypeRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTypeRef_Derived()
  {
    return (EReference)fTypeRefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTypeRef_Interval()
  {
    return (EReference)fTypeRefEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFIntegerInterval()
  {
    return fIntegerIntervalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFIntegerInterval_LowerBound()
  {
    return (EAttribute)fIntegerIntervalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFIntegerInterval_UpperBound()
  {
    return (EAttribute)fIntegerIntervalEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFType()
  {
    return fTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFType_Comment()
  {
    return (EReference)fTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFType_Public()
  {
    return (EAttribute)fTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFType_Name()
  {
    return (EAttribute)fTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFArrayType()
  {
    return fArrayTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFArrayType_ElementType()
  {
    return (EReference)fArrayTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFTypeDef()
  {
    return fTypeDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTypeDef_ActualType()
  {
    return (EReference)fTypeDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFStructType()
  {
    return fStructTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFStructType_Base()
  {
    return (EReference)fStructTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFStructType_Polymorphic()
  {
    return (EAttribute)fStructTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFStructType_Elements()
  {
    return (EReference)fStructTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFUnionType()
  {
    return fUnionTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFUnionType_Base()
  {
    return (EReference)fUnionTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFUnionType_Elements()
  {
    return (EReference)fUnionTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFExpression()
  {
    return fExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFQualifiedElementRef()
  {
    return fQualifiedElementRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFQualifiedElementRef_Element()
  {
    return (EAttribute)fQualifiedElementRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFQualifiedElementRef_Qualifier()
  {
    return (EReference)fQualifiedElementRefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFQualifiedElementRef_Field()
  {
    return (EReference)fQualifiedElementRefEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFDoubleConstant()
  {
    return fDoubleConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFDoubleConstant_Val()
  {
    return (EAttribute)fDoubleConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFFloatConstant()
  {
    return fFloatConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFFloatConstant_Val()
  {
    return (EAttribute)fFloatConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFIntegerConstant()
  {
    return fIntegerConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFIntegerConstant_Val()
  {
    return (EAttribute)fIntegerConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFBooleanConstant()
  {
    return fBooleanConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFBooleanConstant_Val()
  {
    return (EAttribute)fBooleanConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFStringConstant()
  {
    return fStringConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFStringConstant_Val()
  {
    return (EAttribute)fStringConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFMapType()
  {
    return fMapTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFMapType_KeyType()
  {
    return (EReference)fMapTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFMapType_ValueType()
  {
    return (EReference)fMapTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFField()
  {
    return fFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFField_Comment()
  {
    return (EReference)fFieldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFDeclaration()
  {
    return fDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFDeclaration_Rhs()
  {
    return (EReference)fDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFTypedElement()
  {
    return fTypedElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFTypedElement_Type()
  {
    return (EReference)fTypedElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFTypedElement_Array()
  {
    return (EAttribute)fTypedElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFTypedElement_Name()
  {
    return (EAttribute)fTypedElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFArgument()
  {
    return fArgumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFArgument_Comment()
  {
    return (EReference)fArgumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFConstantDef()
  {
    return fConstantDefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFConstantDef_Comment()
  {
    return (EReference)fConstantDefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFConstantDef_Rhs()
  {
    return (EReference)fConstantDefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFInitializerExpression()
  {
    return fInitializerExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFInitializer()
  {
    return fInitializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFCompoundInitializer()
  {
    return fCompoundInitializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFCompoundInitializer_Elements()
  {
    return (EReference)fCompoundInitializerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFFieldInitializer()
  {
    return fFieldInitializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFFieldInitializer_Element()
  {
    return (EReference)fFieldInitializerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFFieldInitializer_Value()
  {
    return (EReference)fFieldInitializerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFBracketInitializer()
  {
    return fBracketInitializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFBracketInitializer_Elements()
  {
    return (EReference)fBracketInitializerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFElementInitializer()
  {
    return fElementInitializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFElementInitializer_First()
  {
    return (EReference)fElementInitializerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFElementInitializer_Second()
  {
    return (EReference)fElementInitializerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDetailCode()
  {
    return detailCodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDetailCode_Lines()
  {
    return (EAttribute)detailCodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDetailCode_Used()
  {
    return (EAttribute)detailCodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAnnotationBlock()
  {
    return annotationBlockEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAnnotationBlock_Elements()
  {
    return (EReference)annotationBlockEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAnnotation()
  {
    return annotationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAnnotation_RawText()
  {
    return (EAttribute)annotationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImport_ImportedNamespace()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImport_ImportURI()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImport_Alias()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFBinaryOperation()
  {
    return fBinaryOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFBinaryOperation_Left()
  {
    return (EReference)fBinaryOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFBinaryOperation_Op()
  {
    return (EAttribute)fBinaryOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFBinaryOperation_Right()
  {
    return (EReference)fBinaryOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFUnaryOperation()
  {
    return fUnaryOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFUnaryOperation_Op()
  {
    return (EAttribute)fUnaryOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFUnaryOperation_Operand()
  {
    return (EReference)fUnaryOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFBasicTypeId()
  {
    return fBasicTypeIdEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFOperator()
  {
    return fOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorFactory getBehaviorFactory()
  {
    return (BehaviorFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    behaviorModelEClass = createEClass(BEHAVIOR_MODEL);
    createEAttribute(behaviorModelEClass, BEHAVIOR_MODEL__NAME);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__IMPORTS);
    createEReference(behaviorModelEClass, BEHAVIOR_MODEL__BEHAVIORS);

    behaviorEClass = createEClass(BEHAVIOR);
    createEReference(behaviorEClass, BEHAVIOR__COMMENT);
    createEAttribute(behaviorEClass, BEHAVIOR__NAME);
    createEAttribute(behaviorEClass, BEHAVIOR__COMPONENT_NAME);
    createEReference(behaviorEClass, BEHAVIOR__VARIABLES);
    createEReference(behaviorEClass, BEHAVIOR__EVENTS);
    createEReference(behaviorEClass, BEHAVIOR__SIGNALS);
    createEReference(behaviorEClass, BEHAVIOR__OPERATIONS);
    createEReference(behaviorEClass, BEHAVIOR__STATE_GRAPHS);

    signalEClass = createEClass(SIGNAL);
    createEReference(signalEClass, SIGNAL__COMMENT);
    createEReference(signalEClass, SIGNAL__SIGNAL);

    signalSignatureEClass = createEClass(SIGNAL_SIGNATURE);
    createEAttribute(signalSignatureEClass, SIGNAL_SIGNATURE__NAME);
    createEReference(signalSignatureEClass, SIGNAL_SIGNATURE__ARGUMENTS);

    eventBindingEClass = createEClass(EVENT_BINDING);
    createEReference(eventBindingEClass, EVENT_BINDING__COMMENT);
    createEReference(eventBindingEClass, EVENT_BINDING__TRIGGER);
    createEReference(eventBindingEClass, EVENT_BINDING__TO);

    eventTriggerEClass = createEClass(EVENT_TRIGGER);
    createEReference(eventTriggerEClass, EVENT_TRIGGER__EVENT);

    eventOnIfEClass = createEClass(EVENT_ON_IF);
    createEAttribute(eventOnIfEClass, EVENT_ON_IF__FREQ);
    createEReference(eventOnIfEClass, EVENT_ON_IF__CONDITION);
    createEReference(eventOnIfEClass, EVENT_ON_IF__CALL);
    createEAttribute(eventOnIfEClass, EVENT_ON_IF__EVENT);
    createEAttribute(eventOnIfEClass, EVENT_ON_IF__SIGNAL);

    methodSignatureEClass = createEClass(METHOD_SIGNATURE);
    createEAttribute(methodSignatureEClass, METHOD_SIGNATURE__NAME);
    createEReference(methodSignatureEClass, METHOD_SIGNATURE__ARGUMENTS);
    createEReference(methodSignatureEClass, METHOD_SIGNATURE__RETURN_TYPE);

    eventEClass = createEClass(EVENT);
    createEAttribute(eventEClass, EVENT__NAME);
    createEAttribute(eventEClass, EVENT__ARGUMENTS);

    operationEClass = createEClass(OPERATION);

    standardOperationEClass = createEClass(STANDARD_OPERATION);
    createEReference(standardOperationEClass, STANDARD_OPERATION__COMMENT);
    createEAttribute(standardOperationEClass, STANDARD_OPERATION__OVERRIDE);
    createEAttribute(standardOperationEClass, STANDARD_OPERATION__NAME);
    createEReference(standardOperationEClass, STANDARD_OPERATION__ARGUMENTS);
    createEReference(standardOperationEClass, STANDARD_OPERATION__RETURN_TYPE);
    createEAttribute(standardOperationEClass, STANDARD_OPERATION__ARRAY);
    createEReference(standardOperationEClass, STANDARD_OPERATION__CONTRACT);
    createEReference(standardOperationEClass, STANDARD_OPERATION__DETAIL_CODE);

    varDeclEClass = createEClass(VAR_DECL);
    createEAttribute(varDeclEClass, VAR_DECL__NAME);
    createEReference(varDeclEClass, VAR_DECL__REF_TYPE);
    createEAttribute(varDeclEClass, VAR_DECL__ARRAY);
    createEAttribute(varDeclEClass, VAR_DECL__VARARGS);

    refableTypeEClass = createEClass(REFABLE_TYPE);
    createEReference(refableTypeEClass, REFABLE_TYPE__TYPE);
    createEAttribute(refableTypeEClass, REFABLE_TYPE__REF);

    specificationBlockEClass = createEClass(SPECIFICATION_BLOCK);
    createEReference(specificationBlockEClass, SPECIFICATION_BLOCK__COMMENT);
    createEReference(specificationBlockEClass, SPECIFICATION_BLOCK__CONTRACTS);

    contractPairEClass = createEClass(CONTRACT_PAIR);
    createEReference(contractPairEClass, CONTRACT_PAIR__REQ);
    createEReference(contractPairEClass, CONTRACT_PAIR__ENS);

    requiresEClass = createEClass(REQUIRES);
    createEAttribute(requiresEClass, REQUIRES__EXPR);

    ensuresEClass = createEClass(ENSURES);
    createEAttribute(ensuresEClass, ENSURES__EXPR);

    fStateGraphEClass = createEClass(FSTATE_GRAPH);
    createEReference(fStateGraphEClass, FSTATE_GRAPH__INITIAL);
    createEReference(fStateGraphEClass, FSTATE_GRAPH__STATES);

    fStateEClass = createEClass(FSTATE);
    createEReference(fStateEClass, FSTATE__COMMENT);
    createEAttribute(fStateEClass, FSTATE__NAME);
    createEAttribute(fStateEClass, FSTATE__ENTRY_ACTION);
    createEReference(fStateEClass, FSTATE__BROADCAST_ENTRY);
    createEAttribute(fStateEClass, FSTATE__EXIT_ACTION);
    createEReference(fStateEClass, FSTATE__BROADCAST_EXIT);
    createEAttribute(fStateEClass, FSTATE__DO_ACTION);
    createEReference(fStateEClass, FSTATE__BORADCAST_DO);
    createEReference(fStateEClass, FSTATE__TRANSITIONS);

    fTransitionEClass = createEClass(FTRANSITION);
    createEReference(fTransitionEClass, FTRANSITION__TRIGGER);
    createEReference(fTransitionEClass, FTRANSITION__GUARD);
    createEReference(fTransitionEClass, FTRANSITION__TO);
    createEAttribute(fTransitionEClass, FTRANSITION__ACTION);
    createEReference(fTransitionEClass, FTRANSITION__BROADCAST);

    fTriggerEClass = createEClass(FTRIGGER);
    createEReference(fTriggerEClass, FTRIGGER__EVENT);

    fEventOnIfEClass = createEClass(FEVENT_ON_IF);
    createEReference(fEventOnIfEClass, FEVENT_ON_IF__NAME);

    broadcastEClass = createEClass(BROADCAST);
    createEAttribute(broadcastEClass, BROADCAST__SIGNAL);
    createEAttribute(broadcastEClass, BROADCAST__ARGUMENTS);

    fGuardEClass = createEClass(FGUARD);
    createEReference(fGuardEClass, FGUARD__CONDITION);

    fTypeRefEClass = createEClass(FTYPE_REF);
    createEAttribute(fTypeRefEClass, FTYPE_REF__PREDEFINED);
    createEReference(fTypeRefEClass, FTYPE_REF__DERIVED);
    createEReference(fTypeRefEClass, FTYPE_REF__INTERVAL);

    fIntegerIntervalEClass = createEClass(FINTEGER_INTERVAL);
    createEAttribute(fIntegerIntervalEClass, FINTEGER_INTERVAL__LOWER_BOUND);
    createEAttribute(fIntegerIntervalEClass, FINTEGER_INTERVAL__UPPER_BOUND);

    fTypeEClass = createEClass(FTYPE);
    createEReference(fTypeEClass, FTYPE__COMMENT);
    createEAttribute(fTypeEClass, FTYPE__PUBLIC);
    createEAttribute(fTypeEClass, FTYPE__NAME);

    fArrayTypeEClass = createEClass(FARRAY_TYPE);
    createEReference(fArrayTypeEClass, FARRAY_TYPE__ELEMENT_TYPE);

    fTypeDefEClass = createEClass(FTYPE_DEF);
    createEReference(fTypeDefEClass, FTYPE_DEF__ACTUAL_TYPE);

    fStructTypeEClass = createEClass(FSTRUCT_TYPE);
    createEReference(fStructTypeEClass, FSTRUCT_TYPE__BASE);
    createEAttribute(fStructTypeEClass, FSTRUCT_TYPE__POLYMORPHIC);
    createEReference(fStructTypeEClass, FSTRUCT_TYPE__ELEMENTS);

    fUnionTypeEClass = createEClass(FUNION_TYPE);
    createEReference(fUnionTypeEClass, FUNION_TYPE__BASE);
    createEReference(fUnionTypeEClass, FUNION_TYPE__ELEMENTS);

    fExpressionEClass = createEClass(FEXPRESSION);

    fQualifiedElementRefEClass = createEClass(FQUALIFIED_ELEMENT_REF);
    createEAttribute(fQualifiedElementRefEClass, FQUALIFIED_ELEMENT_REF__ELEMENT);
    createEReference(fQualifiedElementRefEClass, FQUALIFIED_ELEMENT_REF__QUALIFIER);
    createEReference(fQualifiedElementRefEClass, FQUALIFIED_ELEMENT_REF__FIELD);

    fDoubleConstantEClass = createEClass(FDOUBLE_CONSTANT);
    createEAttribute(fDoubleConstantEClass, FDOUBLE_CONSTANT__VAL);

    fFloatConstantEClass = createEClass(FFLOAT_CONSTANT);
    createEAttribute(fFloatConstantEClass, FFLOAT_CONSTANT__VAL);

    fIntegerConstantEClass = createEClass(FINTEGER_CONSTANT);
    createEAttribute(fIntegerConstantEClass, FINTEGER_CONSTANT__VAL);

    fBooleanConstantEClass = createEClass(FBOOLEAN_CONSTANT);
    createEAttribute(fBooleanConstantEClass, FBOOLEAN_CONSTANT__VAL);

    fStringConstantEClass = createEClass(FSTRING_CONSTANT);
    createEAttribute(fStringConstantEClass, FSTRING_CONSTANT__VAL);

    fMapTypeEClass = createEClass(FMAP_TYPE);
    createEReference(fMapTypeEClass, FMAP_TYPE__KEY_TYPE);
    createEReference(fMapTypeEClass, FMAP_TYPE__VALUE_TYPE);

    fFieldEClass = createEClass(FFIELD);
    createEReference(fFieldEClass, FFIELD__COMMENT);

    fDeclarationEClass = createEClass(FDECLARATION);
    createEReference(fDeclarationEClass, FDECLARATION__RHS);

    fTypedElementEClass = createEClass(FTYPED_ELEMENT);
    createEReference(fTypedElementEClass, FTYPED_ELEMENT__TYPE);
    createEAttribute(fTypedElementEClass, FTYPED_ELEMENT__ARRAY);
    createEAttribute(fTypedElementEClass, FTYPED_ELEMENT__NAME);

    fArgumentEClass = createEClass(FARGUMENT);
    createEReference(fArgumentEClass, FARGUMENT__COMMENT);

    fConstantDefEClass = createEClass(FCONSTANT_DEF);
    createEReference(fConstantDefEClass, FCONSTANT_DEF__COMMENT);
    createEReference(fConstantDefEClass, FCONSTANT_DEF__RHS);

    fInitializerExpressionEClass = createEClass(FINITIALIZER_EXPRESSION);

    fInitializerEClass = createEClass(FINITIALIZER);

    fCompoundInitializerEClass = createEClass(FCOMPOUND_INITIALIZER);
    createEReference(fCompoundInitializerEClass, FCOMPOUND_INITIALIZER__ELEMENTS);

    fFieldInitializerEClass = createEClass(FFIELD_INITIALIZER);
    createEReference(fFieldInitializerEClass, FFIELD_INITIALIZER__ELEMENT);
    createEReference(fFieldInitializerEClass, FFIELD_INITIALIZER__VALUE);

    fBracketInitializerEClass = createEClass(FBRACKET_INITIALIZER);
    createEReference(fBracketInitializerEClass, FBRACKET_INITIALIZER__ELEMENTS);

    fElementInitializerEClass = createEClass(FELEMENT_INITIALIZER);
    createEReference(fElementInitializerEClass, FELEMENT_INITIALIZER__FIRST);
    createEReference(fElementInitializerEClass, FELEMENT_INITIALIZER__SECOND);

    detailCodeEClass = createEClass(DETAIL_CODE);
    createEAttribute(detailCodeEClass, DETAIL_CODE__LINES);
    createEAttribute(detailCodeEClass, DETAIL_CODE__USED);

    annotationBlockEClass = createEClass(ANNOTATION_BLOCK);
    createEReference(annotationBlockEClass, ANNOTATION_BLOCK__ELEMENTS);

    annotationEClass = createEClass(ANNOTATION);
    createEAttribute(annotationEClass, ANNOTATION__RAW_TEXT);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORTED_NAMESPACE);
    createEAttribute(importEClass, IMPORT__IMPORT_URI);
    createEAttribute(importEClass, IMPORT__ALIAS);

    fBinaryOperationEClass = createEClass(FBINARY_OPERATION);
    createEReference(fBinaryOperationEClass, FBINARY_OPERATION__LEFT);
    createEAttribute(fBinaryOperationEClass, FBINARY_OPERATION__OP);
    createEReference(fBinaryOperationEClass, FBINARY_OPERATION__RIGHT);

    fUnaryOperationEClass = createEClass(FUNARY_OPERATION);
    createEAttribute(fUnaryOperationEClass, FUNARY_OPERATION__OP);
    createEReference(fUnaryOperationEClass, FUNARY_OPERATION__OPERAND);

    // Create enums
    fBasicTypeIdEEnum = createEEnum(FBASIC_TYPE_ID);
    fOperatorEEnum = createEEnum(FOPERATOR);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    standardOperationEClass.getESuperTypes().add(this.getOperation());
    fArrayTypeEClass.getESuperTypes().add(this.getFType());
    fTypeDefEClass.getESuperTypes().add(this.getFType());
    fStructTypeEClass.getESuperTypes().add(this.getFType());
    fUnionTypeEClass.getESuperTypes().add(this.getFType());
    fQualifiedElementRefEClass.getESuperTypes().add(this.getFExpression());
    fDoubleConstantEClass.getESuperTypes().add(this.getFExpression());
    fFloatConstantEClass.getESuperTypes().add(this.getFExpression());
    fIntegerConstantEClass.getESuperTypes().add(this.getFExpression());
    fBooleanConstantEClass.getESuperTypes().add(this.getFExpression());
    fStringConstantEClass.getESuperTypes().add(this.getFExpression());
    fMapTypeEClass.getESuperTypes().add(this.getFType());
    fFieldEClass.getESuperTypes().add(this.getFTypedElement());
    fDeclarationEClass.getESuperTypes().add(this.getFTypedElement());
    fArgumentEClass.getESuperTypes().add(this.getFTypedElement());
    fConstantDefEClass.getESuperTypes().add(this.getFTypedElement());
    fInitializerEClass.getESuperTypes().add(this.getFInitializerExpression());
    fCompoundInitializerEClass.getESuperTypes().add(this.getFInitializer());
    fBracketInitializerEClass.getESuperTypes().add(this.getFInitializer());
    fBinaryOperationEClass.getESuperTypes().add(this.getFExpression());
    fUnaryOperationEClass.getESuperTypes().add(this.getFExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(behaviorModelEClass, BehaviorModel.class, "BehaviorModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBehaviorModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_Imports(), this.getImport(), null, "imports", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorModel_Behaviors(), this.getBehavior(), null, "behaviors", null, 0, -1, BehaviorModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorEClass, Behavior.class, "Behavior", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBehavior_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBehavior_Name(), ecorePackage.getEString(), "name", null, 0, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBehavior_ComponentName(), ecorePackage.getEString(), "componentName", null, 0, 1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_Variables(), this.getFDeclaration(), null, "variables", null, 0, -1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_Events(), this.getEventBinding(), null, "events", null, 0, -1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_Signals(), this.getSignal(), null, "signals", null, 0, -1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_Operations(), this.getStandardOperation(), null, "operations", null, 0, -1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehavior_StateGraphs(), this.getFStateGraph(), null, "stateGraphs", null, 0, -1, Behavior.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(signalEClass, Signal.class, "Signal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSignal_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, Signal.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSignal_Signal(), this.getSignalSignature(), null, "signal", null, 0, 1, Signal.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(signalSignatureEClass, SignalSignature.class, "SignalSignature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSignalSignature_Name(), ecorePackage.getEString(), "name", null, 0, 1, SignalSignature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSignalSignature_Arguments(), this.getVarDecl(), null, "arguments", null, 0, -1, SignalSignature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventBindingEClass, EventBinding.class, "EventBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEventBinding_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, EventBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventBinding_Trigger(), this.getEventTrigger(), null, "trigger", null, 0, 1, EventBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventBinding_To(), this.getEvent(), null, "to", null, 0, 1, EventBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventTriggerEClass, EventTrigger.class, "EventTrigger", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEventTrigger_Event(), this.getEventOnIf(), null, "event", null, 0, 1, EventTrigger.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventOnIfEClass, EventOnIf.class, "EventOnIf", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEventOnIf_Freq(), ecorePackage.getEInt(), "freq", null, 0, 1, EventOnIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventOnIf_Condition(), this.getFExpression(), null, "condition", null, 0, 1, EventOnIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventOnIf_Call(), this.getMethodSignature(), null, "call", null, 0, 1, EventOnIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventOnIf_Event(), ecorePackage.getEString(), "event", null, 0, 1, EventOnIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventOnIf_Signal(), ecorePackage.getEString(), "signal", null, 0, 1, EventOnIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodSignatureEClass, MethodSignature.class, "MethodSignature", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMethodSignature_Name(), ecorePackage.getEString(), "name", null, 0, 1, MethodSignature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethodSignature_Arguments(), this.getVarDecl(), null, "arguments", null, 0, -1, MethodSignature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethodSignature_ReturnType(), this.getRefableType(), null, "returnType", null, 0, 1, MethodSignature.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventEClass, Event.class, "Event", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEvent_Name(), ecorePackage.getEString(), "name", null, 0, 1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEvent_Arguments(), ecorePackage.getEString(), "arguments", null, 0, -1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operationEClass, Operation.class, "Operation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(standardOperationEClass, StandardOperation.class, "StandardOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStandardOperation_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStandardOperation_Override(), ecorePackage.getEBoolean(), "override", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStandardOperation_Name(), ecorePackage.getEString(), "name", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStandardOperation_Arguments(), this.getVarDecl(), null, "arguments", null, 0, -1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStandardOperation_ReturnType(), this.getFTypeRef(), null, "returnType", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStandardOperation_Array(), ecorePackage.getEBoolean(), "array", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStandardOperation_Contract(), this.getSpecificationBlock(), null, "contract", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStandardOperation_DetailCode(), this.getDetailCode(), null, "detailCode", null, 0, 1, StandardOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(varDeclEClass, VarDecl.class, "VarDecl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVarDecl_Name(), ecorePackage.getEString(), "name", null, 0, 1, VarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVarDecl_RefType(), this.getFTypeRef(), null, "refType", null, 0, 1, VarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVarDecl_Array(), ecorePackage.getEBoolean(), "array", null, 0, 1, VarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVarDecl_Varargs(), ecorePackage.getEBoolean(), "varargs", null, 0, 1, VarDecl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(refableTypeEClass, RefableType.class, "RefableType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRefableType_Type(), this.getFTypeRef(), null, "type", null, 0, 1, RefableType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRefableType_Ref(), ecorePackage.getEBoolean(), "ref", null, 0, 1, RefableType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specificationBlockEClass, SpecificationBlock.class, "SpecificationBlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSpecificationBlock_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, SpecificationBlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSpecificationBlock_Contracts(), this.getContractPair(), null, "contracts", null, 0, -1, SpecificationBlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(contractPairEClass, ContractPair.class, "ContractPair", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContractPair_Req(), this.getRequires(), null, "req", null, 0, -1, ContractPair.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContractPair_Ens(), this.getEnsures(), null, "ens", null, 0, -1, ContractPair.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(requiresEClass, Requires.class, "Requires", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRequires_Expr(), ecorePackage.getEString(), "expr", null, 0, 1, Requires.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ensuresEClass, Ensures.class, "Ensures", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnsures_Expr(), ecorePackage.getEString(), "expr", null, 0, 1, Ensures.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fStateGraphEClass, FStateGraph.class, "FStateGraph", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFStateGraph_Initial(), this.getFState(), null, "initial", null, 0, 1, FStateGraph.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFStateGraph_States(), this.getFState(), null, "states", null, 0, -1, FStateGraph.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fStateEClass, FState.class, "FState", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFState_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFState_Name(), ecorePackage.getEString(), "name", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFState_EntryAction(), ecorePackage.getEString(), "entryAction", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFState_BroadcastEntry(), this.getBroadcast(), null, "broadcastEntry", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFState_ExitAction(), ecorePackage.getEString(), "exitAction", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFState_BroadcastExit(), this.getBroadcast(), null, "broadcastExit", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFState_DoAction(), ecorePackage.getEString(), "doAction", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFState_BoradcastDo(), this.getBroadcast(), null, "boradcastDo", null, 0, 1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFState_Transitions(), this.getFTransition(), null, "transitions", null, 0, -1, FState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTransitionEClass, FTransition.class, "FTransition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTransition_Trigger(), this.getFTrigger(), null, "trigger", null, 0, 1, FTransition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTransition_Guard(), this.getFGuard(), null, "guard", null, 0, 1, FTransition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTransition_To(), this.getFState(), null, "to", null, 0, 1, FTransition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTransition_Action(), ecorePackage.getEString(), "action", null, 0, 1, FTransition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTransition_Broadcast(), this.getBroadcast(), null, "broadcast", null, 0, 1, FTransition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTriggerEClass, FTrigger.class, "FTrigger", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTrigger_Event(), this.getFEventOnIf(), null, "event", null, 0, 1, FTrigger.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fEventOnIfEClass, FEventOnIf.class, "FEventOnIf", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFEventOnIf_Name(), this.getEvent(), null, "name", null, 0, 1, FEventOnIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(broadcastEClass, Broadcast.class, "Broadcast", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBroadcast_Signal(), ecorePackage.getEString(), "signal", null, 0, 1, Broadcast.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBroadcast_Arguments(), ecorePackage.getEString(), "arguments", null, 0, -1, Broadcast.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fGuardEClass, FGuard.class, "FGuard", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFGuard_Condition(), this.getFExpression(), null, "condition", null, 0, 1, FGuard.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypeRefEClass, FTypeRef.class, "FTypeRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTypeRef_Predefined(), this.getFBasicTypeId(), "predefined", null, 0, 1, FTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTypeRef_Derived(), this.getFType(), null, "derived", null, 0, 1, FTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTypeRef_Interval(), this.getFIntegerInterval(), null, "interval", null, 0, 1, FTypeRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fIntegerIntervalEClass, FIntegerInterval.class, "FIntegerInterval", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFIntegerInterval_LowerBound(), ecorePackage.getEBigInteger(), "lowerBound", null, 0, 1, FIntegerInterval.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFIntegerInterval_UpperBound(), ecorePackage.getEBigInteger(), "upperBound", null, 0, 1, FIntegerInterval.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypeEClass, FType.class, "FType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFType_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, FType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFType_Public(), ecorePackage.getEBoolean(), "public", null, 0, 1, FType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFType_Name(), ecorePackage.getEString(), "name", null, 0, 1, FType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fArrayTypeEClass, FArrayType.class, "FArrayType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFArrayType_ElementType(), this.getFTypeRef(), null, "elementType", null, 0, 1, FArrayType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypeDefEClass, FTypeDef.class, "FTypeDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTypeDef_ActualType(), this.getFTypeRef(), null, "actualType", null, 0, 1, FTypeDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fStructTypeEClass, FStructType.class, "FStructType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFStructType_Base(), this.getFStructType(), null, "base", null, 0, 1, FStructType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFStructType_Polymorphic(), ecorePackage.getEBoolean(), "polymorphic", null, 0, 1, FStructType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFStructType_Elements(), this.getFField(), null, "elements", null, 0, -1, FStructType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fUnionTypeEClass, FUnionType.class, "FUnionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFUnionType_Base(), this.getFUnionType(), null, "base", null, 0, 1, FUnionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFUnionType_Elements(), this.getFField(), null, "elements", null, 0, -1, FUnionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fExpressionEClass, FExpression.class, "FExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fQualifiedElementRefEClass, FQualifiedElementRef.class, "FQualifiedElementRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFQualifiedElementRef_Element(), ecorePackage.getEString(), "element", null, 0, 1, FQualifiedElementRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFQualifiedElementRef_Qualifier(), this.getFQualifiedElementRef(), null, "qualifier", null, 0, 1, FQualifiedElementRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFQualifiedElementRef_Field(), this.getFField(), null, "field", null, 0, 1, FQualifiedElementRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fDoubleConstantEClass, FDoubleConstant.class, "FDoubleConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFDoubleConstant_Val(), ecorePackage.getEDoubleObject(), "val", null, 0, 1, FDoubleConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fFloatConstantEClass, FFloatConstant.class, "FFloatConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFFloatConstant_Val(), ecorePackage.getEFloatObject(), "val", null, 0, 1, FFloatConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fIntegerConstantEClass, FIntegerConstant.class, "FIntegerConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFIntegerConstant_Val(), ecorePackage.getEBigInteger(), "val", null, 0, 1, FIntegerConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fBooleanConstantEClass, FBooleanConstant.class, "FBooleanConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFBooleanConstant_Val(), ecorePackage.getEBoolean(), "val", null, 0, 1, FBooleanConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fStringConstantEClass, FStringConstant.class, "FStringConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFStringConstant_Val(), ecorePackage.getEString(), "val", null, 0, 1, FStringConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fMapTypeEClass, FMapType.class, "FMapType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFMapType_KeyType(), this.getFTypeRef(), null, "keyType", null, 0, 1, FMapType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFMapType_ValueType(), this.getFTypeRef(), null, "valueType", null, 0, 1, FMapType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fFieldEClass, FField.class, "FField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFField_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, FField.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fDeclarationEClass, FDeclaration.class, "FDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFDeclaration_Rhs(), this.getFInitializerExpression(), null, "rhs", null, 0, 1, FDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fTypedElementEClass, FTypedElement.class, "FTypedElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTypedElement_Type(), this.getFTypeRef(), null, "type", null, 0, 1, FTypedElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTypedElement_Array(), ecorePackage.getEBoolean(), "array", null, 0, 1, FTypedElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTypedElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, FTypedElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fArgumentEClass, FArgument.class, "FArgument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFArgument_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, FArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fConstantDefEClass, FConstantDef.class, "FConstantDef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFConstantDef_Comment(), this.getAnnotationBlock(), null, "comment", null, 0, 1, FConstantDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFConstantDef_Rhs(), this.getFInitializerExpression(), null, "rhs", null, 0, 1, FConstantDef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fInitializerExpressionEClass, FInitializerExpression.class, "FInitializerExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fInitializerEClass, FInitializer.class, "FInitializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fCompoundInitializerEClass, FCompoundInitializer.class, "FCompoundInitializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFCompoundInitializer_Elements(), this.getFFieldInitializer(), null, "elements", null, 0, -1, FCompoundInitializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fFieldInitializerEClass, FFieldInitializer.class, "FFieldInitializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFFieldInitializer_Element(), this.getFField(), null, "element", null, 0, 1, FFieldInitializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFFieldInitializer_Value(), this.getFInitializerExpression(), null, "value", null, 0, 1, FFieldInitializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fBracketInitializerEClass, FBracketInitializer.class, "FBracketInitializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFBracketInitializer_Elements(), this.getFElementInitializer(), null, "elements", null, 0, -1, FBracketInitializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fElementInitializerEClass, FElementInitializer.class, "FElementInitializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFElementInitializer_First(), this.getFInitializerExpression(), null, "first", null, 0, 1, FElementInitializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFElementInitializer_Second(), this.getFInitializerExpression(), null, "second", null, 0, 1, FElementInitializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(detailCodeEClass, DetailCode.class, "DetailCode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDetailCode_Lines(), ecorePackage.getEString(), "lines", null, 0, -1, DetailCode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDetailCode_Used(), ecorePackage.getEBoolean(), "used", null, 0, 1, DetailCode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(annotationBlockEClass, AnnotationBlock.class, "AnnotationBlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAnnotationBlock_Elements(), this.getAnnotation(), null, "elements", null, 0, -1, AnnotationBlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(annotationEClass, Annotation.class, "Annotation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAnnotation_RawText(), ecorePackage.getEString(), "rawText", null, 0, 1, Annotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImport_ImportURI(), ecorePackage.getEString(), "importURI", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getImport_Alias(), ecorePackage.getEString(), "alias", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fBinaryOperationEClass, FBinaryOperation.class, "FBinaryOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFBinaryOperation_Left(), this.getFExpression(), null, "left", null, 0, 1, FBinaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFBinaryOperation_Op(), this.getFOperator(), "op", null, 0, 1, FBinaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFBinaryOperation_Right(), this.getFExpression(), null, "right", null, 0, 1, FBinaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fUnaryOperationEClass, FUnaryOperation.class, "FUnaryOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFUnaryOperation_Op(), this.getFOperator(), "op", null, 0, 1, FUnaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFUnaryOperation_Operand(), this.getFExpression(), null, "operand", null, 0, 1, FUnaryOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(fBasicTypeIdEEnum, FBasicTypeId.class, "FBasicTypeId");
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UNDEFINED);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT8);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT8);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT16);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT16);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT32);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT32);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.INT64);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.UINT64);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.BOOLEAN);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.STRING);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.FLOAT);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.DOUBLE);
    addEEnumLiteral(fBasicTypeIdEEnum, FBasicTypeId.BYTE_BUFFER);

    initEEnum(fOperatorEEnum, FOperator.class, "FOperator");
    addEEnumLiteral(fOperatorEEnum, FOperator.OR);
    addEEnumLiteral(fOperatorEEnum, FOperator.AND);
    addEEnumLiteral(fOperatorEEnum, FOperator.EQUAL);
    addEEnumLiteral(fOperatorEEnum, FOperator.UNEQUAL);
    addEEnumLiteral(fOperatorEEnum, FOperator.SMALLER);
    addEEnumLiteral(fOperatorEEnum, FOperator.SMALLER_OR_EQUAL);
    addEEnumLiteral(fOperatorEEnum, FOperator.GREATER_OR_EQUAL);
    addEEnumLiteral(fOperatorEEnum, FOperator.GREATER);
    addEEnumLiteral(fOperatorEEnum, FOperator.ADDITION);
    addEEnumLiteral(fOperatorEEnum, FOperator.SUBTRACTION);
    addEEnumLiteral(fOperatorEEnum, FOperator.MULTIPLICATION);
    addEEnumLiteral(fOperatorEEnum, FOperator.DIVISION);
    addEEnumLiteral(fOperatorEEnum, FOperator.NEGATION);

    // Create resource
    createResource(eNS_URI);
  }

} //BehaviorPackageImpl
